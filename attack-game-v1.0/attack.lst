
attack.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000018a8  0000191c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800104  000018ac  00001920  2**0
                  ALLOC
  3 .stab         00002dcc  00000000  00000000  00001920  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d4b  00000000  00000000  000046ec  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__CCP__>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
      22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	d4 e0       	ldi	r29, 0x04	; 4
      3c:	de bf       	out	0x3e, r29	; 62
      3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
      40:	11 e0       	ldi	r17, 0x01	; 1
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	b1 e0       	ldi	r27, 0x01	; 1
      46:	e8 ea       	ldi	r30, 0xA8	; 168
      48:	f8 e1       	ldi	r31, 0x18	; 24
      4a:	02 c0       	rjmp	.+4      	; 0x50 <.do_copy_data_start>

0000004c <.do_copy_data_loop>:
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0

00000050 <.do_copy_data_start>:
      50:	a4 30       	cpi	r26, 0x04	; 4
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <.do_copy_data_loop>

00000056 <__do_clear_bss>:
      56:	11 e0       	ldi	r17, 0x01	; 1
      58:	a4 e0       	ldi	r26, 0x04	; 4
      5a:	b1 e0       	ldi	r27, 0x01	; 1
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a8 31       	cpi	r26, 0x18	; 24
      62:	b1 07       	cpc	r27, r17
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	64 d2       	rcall	.+1224   	; 0x530 <main>
      68:	1d cc       	rjmp	.-1990   	; 0xfffff8a4 <__eeprom_end+0xff7ef8a4>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__heap_end>

0000006c <delayShorter>:




void delayShorter(void)
{
      6c:	80 e0       	ldi	r24, 0x00	; 0
      6e:	90 e0       	ldi	r25, 0x00	; 0
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
		{ 
			asm("nop");  
      70:	00 00       	nop
			delayvar++;
      72:	01 96       	adiw	r24, 0x01	; 1

void delayShorter(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
      74:	85 36       	cpi	r24, 0x65	; 101
      76:	91 05       	cpc	r25, r1
      78:	d9 f7       	brne	.-10     	; 0x70 <delayShorter+0x4>
		{ 
			asm("nop");  
			delayvar++;
		} 
}
      7a:	08 95       	ret

0000007c <delayShort>:



void delayShort(void)
{
      7c:	80 e0       	ldi	r24, 0x00	; 0
      7e:	90 e0       	ldi	r25, 0x00	; 0
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
      80:	00 00       	nop
			delayvar++;
      82:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
      84:	89 3c       	cpi	r24, 0xC9	; 201
      86:	91 05       	cpc	r25, r1
      88:	d9 f7       	brne	.-10     	; 0x80 <delayShort+0x4>
		{ 
			asm("nop");  
			delayvar++;
		} 
}
      8a:	08 95       	ret

0000008c <delayLong>:

		

void delayLong()
{
      8c:	80 e0       	ldi	r24, 0x00	; 0
      8e:	90 e0       	ldi	r25, 0x00	; 0
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  1000U)		
		{ 
			asm("nop");  
      90:	00 00       	nop
			delayvar++;
      92:	01 96       	adiw	r24, 0x01	; 1

void delayLong()
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  1000U)		
      94:	23 e0       	ldi	r18, 0x03	; 3
      96:	89 3e       	cpi	r24, 0xE9	; 233
      98:	92 07       	cpc	r25, r18
      9a:	d1 f7       	brne	.-12     	; 0x90 <delayLong+0x4>
		} 


		
	
}
      9c:	08 95       	ret

0000009e <dc>:




void dc() // Very Long Delay
{
      9e:	80 e0       	ldi	r24, 0x00	; 0
      a0:	90 e0       	ldi	r25, 0x00	; 0
	...
		{ 
			asm("nop");  
			asm("nop");  
			asm("nop");  
			asm("nop");  
			asm("nop");  
      aa:	00 00       	nop
			delayvar++;
      ac:	01 96       	adiw	r24, 0x01	; 1
void dc() // Very Long Delay
{
unsigned int delayvar;

delayvar = 0; 
	while (delayvar <=  25000U)		
      ae:	21 e6       	ldi	r18, 0x61	; 97
      b0:	89 3a       	cpi	r24, 0xA9	; 169
      b2:	92 07       	cpc	r25, r18
      b4:	b1 f7       	brne	.-20     	; 0xa2 <dc+0x4>
			asm("nop");  
			asm("nop");  
			asm("nop");  
			delayvar++;
		} 
}
      b6:	08 95       	ret

000000b8 <display>:


void display (void)
{
    
PORTB = (1 << 3) | maskB; // turn on redCol 1
      b8:	8d e0       	ldi	r24, 0x0D	; 13
      ba:	85 b9       	out	0x05, r24	; 5
PORTD = redMatrix[0] | maskD;
      bc:	80 91 0e 01 	lds	r24, 0x010E
      c0:	80 68       	ori	r24, 0x80	; 128
      c2:	8b b9       	out	0x0b, r24	; 11
      c4:	80 e0       	ldi	r24, 0x00	; 0
      c6:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
		{ 
			asm("nop");  
      c8:	00 00       	nop
			delayvar++;
      ca:	01 96       	adiw	r24, 0x01	; 1

void delayShorter(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
      cc:	85 36       	cpi	r24, 0x65	; 101
      ce:	91 05       	cpc	r25, r1
      d0:	d9 f7       	brne	.-10     	; 0xc8 <display+0x10>
{
    
PORTB = (1 << 3) | maskB; // turn on redCol 1
PORTD = redMatrix[0] | maskD;
delayShorter();
PORTD = maskD;
      d2:	80 e8       	ldi	r24, 0x80	; 128
      d4:	8b b9       	out	0x0b, r24	; 11

PORTB = (1 << 4) | maskB; // turn on redCol 2
      d6:	85 e1       	ldi	r24, 0x15	; 21
      d8:	85 b9       	out	0x05, r24	; 5
PORTD = redMatrix[1] | maskD;
      da:	80 91 10 01 	lds	r24, 0x0110
      de:	80 68       	ori	r24, 0x80	; 128
      e0:	8b b9       	out	0x0b, r24	; 11
      e2:	80 e0       	ldi	r24, 0x00	; 0
      e4:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
		{ 
			asm("nop");  
      e6:	00 00       	nop
			delayvar++;
      e8:	01 96       	adiw	r24, 0x01	; 1

void delayShorter(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
      ea:	85 36       	cpi	r24, 0x65	; 101
      ec:	91 05       	cpc	r25, r1
      ee:	d9 f7       	brne	.-10     	; 0xe6 <display+0x2e>
PORTD = maskD;

PORTB = (1 << 4) | maskB; // turn on redCol 2
PORTD = redMatrix[1] | maskD;
delayShorter();
PORTD = maskD;
      f0:	80 e8       	ldi	r24, 0x80	; 128
      f2:	8b b9       	out	0x0b, r24	; 11

PORTB = (1 << 5) | maskB; // turn on redCol 3
      f4:	85 e2       	ldi	r24, 0x25	; 37
      f6:	85 b9       	out	0x05, r24	; 5
PORTD = redMatrix[2] | maskD;
      f8:	80 91 12 01 	lds	r24, 0x0112
      fc:	80 68       	ori	r24, 0x80	; 128
      fe:	8b b9       	out	0x0b, r24	; 11
     100:	80 e0       	ldi	r24, 0x00	; 0
     102:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
		{ 
			asm("nop");  
     104:	00 00       	nop
			delayvar++;
     106:	01 96       	adiw	r24, 0x01	; 1

void delayShorter(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
     108:	85 36       	cpi	r24, 0x65	; 101
     10a:	91 05       	cpc	r25, r1
     10c:	d9 f7       	brne	.-10     	; 0x104 <display+0x4c>
PORTD = maskD;

PORTB = (1 << 5) | maskB; // turn on redCol 3
PORTD = redMatrix[2] | maskD;
delayShorter();
PORTD = maskD;
     10e:	80 e8       	ldi	r24, 0x80	; 128
     110:	8b b9       	out	0x0b, r24	; 11

PORTB = (1 << 6) | maskB; // turn on redCol 4
     112:	85 e4       	ldi	r24, 0x45	; 69
     114:	85 b9       	out	0x05, r24	; 5
PORTD = redMatrix[3] | maskD;
     116:	80 91 14 01 	lds	r24, 0x0114
     11a:	80 68       	ori	r24, 0x80	; 128
     11c:	8b b9       	out	0x0b, r24	; 11
     11e:	80 e0       	ldi	r24, 0x00	; 0
     120:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
		{ 
			asm("nop");  
     122:	00 00       	nop
			delayvar++;
     124:	01 96       	adiw	r24, 0x01	; 1

void delayShorter(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
     126:	85 36       	cpi	r24, 0x65	; 101
     128:	91 05       	cpc	r25, r1
     12a:	d9 f7       	brne	.-10     	; 0x122 <display+0x6a>
PORTD = maskD;

PORTB = (1 << 6) | maskB; // turn on redCol 4
PORTD = redMatrix[3] | maskD;
delayShorter();
PORTD = maskD;
     12c:	80 e8       	ldi	r24, 0x80	; 128
     12e:	8b b9       	out	0x0b, r24	; 11

PORTB = (1 << 7) | maskB; // turn on redCol 5
     130:	85 e8       	ldi	r24, 0x85	; 133
     132:	85 b9       	out	0x05, r24	; 5
PORTD = redMatrix[4] | maskD;
     134:	80 91 16 01 	lds	r24, 0x0116
     138:	80 68       	ori	r24, 0x80	; 128
     13a:	8b b9       	out	0x0b, r24	; 11
     13c:	80 e0       	ldi	r24, 0x00	; 0
     13e:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
		{ 
			asm("nop");  
     140:	00 00       	nop
			delayvar++;
     142:	01 96       	adiw	r24, 0x01	; 1

void delayShorter(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  100U)		
     144:	85 36       	cpi	r24, 0x65	; 101
     146:	91 05       	cpc	r25, r1
     148:	d9 f7       	brne	.-10     	; 0x140 <display+0x88>
PORTD = maskD;

PORTB = (1 << 7) | maskB; // turn on redCol 5
PORTD = redMatrix[4] | maskD;
delayShorter();
PORTD = maskD;
     14a:	80 e8       	ldi	r24, 0x80	; 128
     14c:	8b b9       	out	0x0b, r24	; 11

PORTB = maskB;
     14e:	85 e0       	ldi	r24, 0x05	; 5
     150:	85 b9       	out	0x05, r24	; 5

PORTC = (1 << 1) | maskC; // turn on grnCol 1
     152:	83 e0       	ldi	r24, 0x03	; 3
     154:	88 b9       	out	0x08, r24	; 8
PORTD = grnMatrix[0] | maskD;
     156:	80 91 04 01 	lds	r24, 0x0104
     15a:	80 68       	ori	r24, 0x80	; 128
     15c:	8b b9       	out	0x0b, r24	; 11
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     162:	00 00       	nop
			delayvar++;
     164:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     166:	89 3c       	cpi	r24, 0xC9	; 201
     168:	91 05       	cpc	r25, r1
     16a:	d9 f7       	brne	.-10     	; 0x162 <display+0xaa>
PORTB = maskB;

PORTC = (1 << 1) | maskC; // turn on grnCol 1
PORTD = grnMatrix[0] | maskD;
delayShort();
PORTD = maskD;
     16c:	80 e8       	ldi	r24, 0x80	; 128
     16e:	8b b9       	out	0x0b, r24	; 11

PORTC = (1 << 2) | maskC; // turn on grnCol 2
     170:	85 e0       	ldi	r24, 0x05	; 5
     172:	88 b9       	out	0x08, r24	; 8
PORTD = grnMatrix[1] | maskD;
     174:	80 91 06 01 	lds	r24, 0x0106
     178:	80 68       	ori	r24, 0x80	; 128
     17a:	8b b9       	out	0x0b, r24	; 11
     17c:	80 e0       	ldi	r24, 0x00	; 0
     17e:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     180:	00 00       	nop
			delayvar++;
     182:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     184:	89 3c       	cpi	r24, 0xC9	; 201
     186:	91 05       	cpc	r25, r1
     188:	d9 f7       	brne	.-10     	; 0x180 <display+0xc8>
PORTD = maskD;

PORTC = (1 << 2) | maskC; // turn on grnCol 2
PORTD = grnMatrix[1] | maskD;
delayShort();
PORTD = maskD;
     18a:	80 e8       	ldi	r24, 0x80	; 128
     18c:	8b b9       	out	0x0b, r24	; 11

PORTC = (1 << 3) | maskC; // turn on grnCol 3
     18e:	89 e0       	ldi	r24, 0x09	; 9
     190:	88 b9       	out	0x08, r24	; 8
PORTD = grnMatrix[2] | maskD;
     192:	80 91 08 01 	lds	r24, 0x0108
     196:	80 68       	ori	r24, 0x80	; 128
     198:	8b b9       	out	0x0b, r24	; 11
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     19e:	00 00       	nop
			delayvar++;
     1a0:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     1a2:	89 3c       	cpi	r24, 0xC9	; 201
     1a4:	91 05       	cpc	r25, r1
     1a6:	d9 f7       	brne	.-10     	; 0x19e <display+0xe6>
PORTD = maskD;

PORTC = (1 << 3) | maskC; // turn on grnCol 3
PORTD = grnMatrix[2] | maskD;
delayShort();
PORTD = maskD;
     1a8:	80 e8       	ldi	r24, 0x80	; 128
     1aa:	8b b9       	out	0x0b, r24	; 11

PORTC = (1 << 4) | maskC; // turn on grnCol 4
     1ac:	81 e1       	ldi	r24, 0x11	; 17
     1ae:	88 b9       	out	0x08, r24	; 8
PORTD = grnMatrix[3] | maskD;
     1b0:	80 91 0a 01 	lds	r24, 0x010A
     1b4:	80 68       	ori	r24, 0x80	; 128
     1b6:	8b b9       	out	0x0b, r24	; 11
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     1bc:	00 00       	nop
			delayvar++;
     1be:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     1c0:	89 3c       	cpi	r24, 0xC9	; 201
     1c2:	91 05       	cpc	r25, r1
     1c4:	d9 f7       	brne	.-10     	; 0x1bc <display+0x104>
PORTD = maskD;

PORTC = (1 << 4) | maskC; // turn on grnCol 4
PORTD = grnMatrix[3] | maskD;
delayShort();
PORTD = maskD;
     1c6:	80 e8       	ldi	r24, 0x80	; 128
     1c8:	8b b9       	out	0x0b, r24	; 11

PORTC = (1 << 5) | maskC; // turn on grnCol 5
     1ca:	81 e2       	ldi	r24, 0x21	; 33
     1cc:	88 b9       	out	0x08, r24	; 8
PORTD = grnMatrix[4] | maskD;
     1ce:	80 91 0c 01 	lds	r24, 0x010C
     1d2:	80 68       	ori	r24, 0x80	; 128
     1d4:	8b b9       	out	0x0b, r24	; 11
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     1da:	00 00       	nop
			delayvar++;
     1dc:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     1de:	89 3c       	cpi	r24, 0xC9	; 201
     1e0:	91 05       	cpc	r25, r1
     1e2:	d9 f7       	brne	.-10     	; 0x1da <display+0x122>
PORTD = maskD;

PORTC = (1 << 5) | maskC; // turn on grnCol 5
PORTD = grnMatrix[4] | maskD;
delayShort();
PORTD = maskD;
     1e4:	80 e8       	ldi	r24, 0x80	; 128
     1e6:	8b b9       	out	0x0b, r24	; 11


PORTC = maskC;
     1e8:	81 e0       	ldi	r24, 0x01	; 1
     1ea:	88 b9       	out	0x08, r24	; 8




}
     1ec:	08 95       	ret

000001ee <lose>:


void lose(void) // 'you lose' display
{
redMatrix[0] = 127;
     1ee:	8f e7       	ldi	r24, 0x7F	; 127
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	90 93 0f 01 	sts	0x010F, r25
     1f6:	80 93 0e 01 	sts	0x010E, r24
redMatrix[1] = 127;
     1fa:	90 93 11 01 	sts	0x0111, r25
     1fe:	80 93 10 01 	sts	0x0110, r24
redMatrix[2] = 127;
     202:	90 93 13 01 	sts	0x0113, r25
     206:	80 93 12 01 	sts	0x0112, r24
redMatrix[3] = 127;
     20a:	90 93 15 01 	sts	0x0115, r25
     20e:	80 93 14 01 	sts	0x0114, r24
redMatrix[4] = 127;
     212:	90 93 17 01 	sts	0x0117, r25
     216:	80 93 16 01 	sts	0x0116, r24
grnMatrix[0] = 127;
     21a:	90 93 05 01 	sts	0x0105, r25
     21e:	80 93 04 01 	sts	0x0104, r24
grnMatrix[1] = 127;
     222:	90 93 07 01 	sts	0x0107, r25
     226:	80 93 06 01 	sts	0x0106, r24
grnMatrix[2] = 127;
     22a:	90 93 09 01 	sts	0x0109, r25
     22e:	80 93 08 01 	sts	0x0108, r24
grnMatrix[3] = 127;
     232:	90 93 0b 01 	sts	0x010B, r25
     236:	80 93 0a 01 	sts	0x010A, r24
grnMatrix[4] = 127;
     23a:	90 93 0d 01 	sts	0x010D, r25
     23e:	80 93 0c 01 	sts	0x010C, r24

}
     242:	08 95       	ret

00000244 <levelup>:

void levelup(void) // next level
{
grnMatrix[0] = 127;
     244:	8f e7       	ldi	r24, 0x7F	; 127
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	90 93 05 01 	sts	0x0105, r25
     24c:	80 93 04 01 	sts	0x0104, r24
grnMatrix[1] = 127;
     250:	90 93 07 01 	sts	0x0107, r25
     254:	80 93 06 01 	sts	0x0106, r24
grnMatrix[2] = 127;
     258:	90 93 09 01 	sts	0x0109, r25
     25c:	80 93 08 01 	sts	0x0108, r24
grnMatrix[3] = 127;
     260:	90 93 0b 01 	sts	0x010B, r25
     264:	80 93 0a 01 	sts	0x010A, r24
grnMatrix[4] = 127;
     268:	90 93 0d 01 	sts	0x010D, r25
     26c:	80 93 0c 01 	sts	0x010C, r24

}
     270:	08 95       	ret

00000272 <bomb>:

void bomb(void) // 'bomb' display
{
     272:	cf 93       	push	r28
     274:	df 93       	push	r29
grnMatrix[0] = 0;
     276:	10 92 05 01 	sts	0x0105, r1
     27a:	10 92 04 01 	sts	0x0104, r1
grnMatrix[1] = 0;
     27e:	10 92 07 01 	sts	0x0107, r1
     282:	10 92 06 01 	sts	0x0106, r1
grnMatrix[2] = 8;
     286:	88 e0       	ldi	r24, 0x08	; 8
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	90 93 09 01 	sts	0x0109, r25
     28e:	80 93 08 01 	sts	0x0108, r24
grnMatrix[3] = 0;
     292:	10 92 0b 01 	sts	0x010B, r1
     296:	10 92 0a 01 	sts	0x010A, r1
grnMatrix[4] = 0;
     29a:	10 92 0d 01 	sts	0x010D, r1
     29e:	10 92 0c 01 	sts	0x010C, r1
     2a2:	c0 e0       	ldi	r28, 0x00	; 0
     2a4:	d0 e0       	ldi	r29, 0x00	; 0

unsigned int blah;
blah = 0;
while (blah < 10)
{
    display();
     2a6:	08 df       	rcall	.-496    	; 0xb8 <display>
    blah++;
     2a8:	21 96       	adiw	r28, 0x01	; 1
grnMatrix[3] = 0;
grnMatrix[4] = 0;

unsigned int blah;
blah = 0;
while (blah < 10)
     2aa:	ca 30       	cpi	r28, 0x0A	; 10
     2ac:	d1 05       	cpc	r29, r1
     2ae:	d9 f7       	brne	.-10     	; 0x2a6 <bomb+0x34>
    display();
    blah++;
}


grnMatrix[0] = 0;
     2b0:	10 92 05 01 	sts	0x0105, r1
     2b4:	10 92 04 01 	sts	0x0104, r1
grnMatrix[1] = 8;
     2b8:	28 e0       	ldi	r18, 0x08	; 8
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	30 93 07 01 	sts	0x0107, r19
     2c0:	20 93 06 01 	sts	0x0106, r18
grnMatrix[2] = 20;
     2c4:	84 e1       	ldi	r24, 0x14	; 20
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	90 93 09 01 	sts	0x0109, r25
     2cc:	80 93 08 01 	sts	0x0108, r24
grnMatrix[3] = 8;
     2d0:	30 93 0b 01 	sts	0x010B, r19
     2d4:	20 93 0a 01 	sts	0x010A, r18
grnMatrix[4] = 0;
     2d8:	10 92 0d 01 	sts	0x010D, r1
     2dc:	10 92 0c 01 	sts	0x010C, r1
     2e0:	c0 e0       	ldi	r28, 0x00	; 0
     2e2:	d0 e0       	ldi	r29, 0x00	; 0
blah = 0;
while (blah < 10)
{
    display();
     2e4:	e9 de       	rcall	.-558    	; 0xb8 <display>
    blah++;
     2e6:	21 96       	adiw	r28, 0x01	; 1
grnMatrix[1] = 8;
grnMatrix[2] = 20;
grnMatrix[3] = 8;
grnMatrix[4] = 0;
blah = 0;
while (blah < 10)
     2e8:	ca 30       	cpi	r28, 0x0A	; 10
     2ea:	d1 05       	cpc	r29, r1
     2ec:	d9 f7       	brne	.-10     	; 0x2e4 <bomb+0x72>
{
    display();
    blah++;
}
grnMatrix[0] = 8;
     2ee:	48 e0       	ldi	r20, 0x08	; 8
     2f0:	50 e0       	ldi	r21, 0x00	; 0
     2f2:	50 93 05 01 	sts	0x0105, r21
     2f6:	40 93 04 01 	sts	0x0104, r20
grnMatrix[1] = 20;
     2fa:	24 e1       	ldi	r18, 0x14	; 20
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	30 93 07 01 	sts	0x0107, r19
     302:	20 93 06 01 	sts	0x0106, r18
grnMatrix[2] = 34;
     306:	82 e2       	ldi	r24, 0x22	; 34
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	90 93 09 01 	sts	0x0109, r25
     30e:	80 93 08 01 	sts	0x0108, r24
grnMatrix[3] = 20;
     312:	30 93 0b 01 	sts	0x010B, r19
     316:	20 93 0a 01 	sts	0x010A, r18
grnMatrix[4] = 8;
     31a:	50 93 0d 01 	sts	0x010D, r21
     31e:	40 93 0c 01 	sts	0x010C, r20
     322:	c0 e0       	ldi	r28, 0x00	; 0
     324:	d0 e0       	ldi	r29, 0x00	; 0
blah = 0;
while (blah < 10)
{
    display();
     326:	c8 de       	rcall	.-624    	; 0xb8 <display>
    blah++;
     328:	21 96       	adiw	r28, 0x01	; 1
grnMatrix[1] = 20;
grnMatrix[2] = 34;
grnMatrix[3] = 20;
grnMatrix[4] = 8;
blah = 0;
while (blah < 10)
     32a:	ca 30       	cpi	r28, 0x0A	; 10
     32c:	d1 05       	cpc	r29, r1
     32e:	d9 f7       	brne	.-10     	; 0x326 <bomb+0xb4>
{
    display();
    blah++;
}
grnMatrix[0] = 20;
     330:	44 e1       	ldi	r20, 0x14	; 20
     332:	50 e0       	ldi	r21, 0x00	; 0
     334:	50 93 05 01 	sts	0x0105, r21
     338:	40 93 04 01 	sts	0x0104, r20
grnMatrix[1] = 34;
     33c:	22 e2       	ldi	r18, 0x22	; 34
     33e:	30 e0       	ldi	r19, 0x00	; 0
     340:	30 93 07 01 	sts	0x0107, r19
     344:	20 93 06 01 	sts	0x0106, r18
grnMatrix[2] = 65;
     348:	81 e4       	ldi	r24, 0x41	; 65
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	90 93 09 01 	sts	0x0109, r25
     350:	80 93 08 01 	sts	0x0108, r24
grnMatrix[3] = 34;
     354:	30 93 0b 01 	sts	0x010B, r19
     358:	20 93 0a 01 	sts	0x010A, r18
grnMatrix[4] = 20;
     35c:	50 93 0d 01 	sts	0x010D, r21
     360:	40 93 0c 01 	sts	0x010C, r20
     364:	c0 e0       	ldi	r28, 0x00	; 0
     366:	d0 e0       	ldi	r29, 0x00	; 0
blah = 0;
while (blah < 10)
{
    display();
     368:	a7 de       	rcall	.-690    	; 0xb8 <display>
    blah++;
     36a:	21 96       	adiw	r28, 0x01	; 1
grnMatrix[1] = 34;
grnMatrix[2] = 65;
grnMatrix[3] = 34;
grnMatrix[4] = 20;
blah = 0;
while (blah < 10)
     36c:	ca 30       	cpi	r28, 0x0A	; 10
     36e:	d1 05       	cpc	r29, r1
     370:	d9 f7       	brne	.-10     	; 0x368 <bomb+0xf6>
{
    display();
    blah++;
}
grnMatrix[0] = 34;
     372:	22 e2       	ldi	r18, 0x22	; 34
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	30 93 05 01 	sts	0x0105, r19
     37a:	20 93 04 01 	sts	0x0104, r18
grnMatrix[1] = 65;
     37e:	81 e4       	ldi	r24, 0x41	; 65
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	90 93 07 01 	sts	0x0107, r25
     386:	80 93 06 01 	sts	0x0106, r24
grnMatrix[2] = 0;
     38a:	10 92 09 01 	sts	0x0109, r1
     38e:	10 92 08 01 	sts	0x0108, r1
grnMatrix[3] = 65;
     392:	90 93 0b 01 	sts	0x010B, r25
     396:	80 93 0a 01 	sts	0x010A, r24
grnMatrix[4] = 34;
     39a:	30 93 0d 01 	sts	0x010D, r19
     39e:	20 93 0c 01 	sts	0x010C, r18
     3a2:	c0 e0       	ldi	r28, 0x00	; 0
     3a4:	d0 e0       	ldi	r29, 0x00	; 0
blah = 0;
while (blah < 10)
{
    display();
     3a6:	88 de       	rcall	.-752    	; 0xb8 <display>
    blah++;
     3a8:	21 96       	adiw	r28, 0x01	; 1
grnMatrix[1] = 65;
grnMatrix[2] = 0;
grnMatrix[3] = 65;
grnMatrix[4] = 34;
blah = 0;
while (blah < 10)
     3aa:	ca 30       	cpi	r28, 0x0A	; 10
     3ac:	d1 05       	cpc	r29, r1
     3ae:	d9 f7       	brne	.-10     	; 0x3a6 <bomb+0x134>
{
    display();
    blah++;
}
grnMatrix[0] = 65;
     3b0:	81 e4       	ldi	r24, 0x41	; 65
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	90 93 05 01 	sts	0x0105, r25
     3b8:	80 93 04 01 	sts	0x0104, r24
grnMatrix[1] = 0;
     3bc:	10 92 07 01 	sts	0x0107, r1
     3c0:	10 92 06 01 	sts	0x0106, r1
grnMatrix[2] = 0;
     3c4:	10 92 09 01 	sts	0x0109, r1
     3c8:	10 92 08 01 	sts	0x0108, r1
grnMatrix[3] = 0;
     3cc:	10 92 0b 01 	sts	0x010B, r1
     3d0:	10 92 0a 01 	sts	0x010A, r1
grnMatrix[4] = 65;
     3d4:	90 93 0d 01 	sts	0x010D, r25
     3d8:	80 93 0c 01 	sts	0x010C, r24
     3dc:	c0 e0       	ldi	r28, 0x00	; 0
     3de:	d0 e0       	ldi	r29, 0x00	; 0
blah = 0;
while (blah < 10)
{
    display();
     3e0:	6b de       	rcall	.-810    	; 0xb8 <display>
    blah++;
     3e2:	21 96       	adiw	r28, 0x01	; 1
grnMatrix[1] = 0;
grnMatrix[2] = 0;
grnMatrix[3] = 0;
grnMatrix[4] = 65;
blah = 0;
while (blah < 10)
     3e4:	ca 30       	cpi	r28, 0x0A	; 10
     3e6:	d1 05       	cpc	r29, r1
     3e8:	d9 f7       	brne	.-10     	; 0x3e0 <bomb+0x16e>
{
    display();
    blah++;
}

}
     3ea:	df 91       	pop	r29
     3ec:	cf 91       	pop	r28
     3ee:	08 95       	ret

000003f0 <getpoint>:



unsigned short getpoint(unsigned short xin, unsigned short yin)
{
     3f0:	db 01       	movw	r26, r22

// for color input 0 = dark, 1 = red, 2 = green, 3 = orange    
unsigned short color = 0;


if (redMatrix[yin] & 64 >> xin)
     3f2:	20 e4       	ldi	r18, 0x40	; 64
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	02 c0       	rjmp	.+4      	; 0x3fc <getpoint+0xc>
     3f8:	35 95       	asr	r19
     3fa:	27 95       	ror	r18
     3fc:	8a 95       	dec	r24
     3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <getpoint+0x8>
     400:	aa 0f       	add	r26, r26
     402:	bb 1f       	adc	r27, r27
     404:	fd 01       	movw	r30, r26
     406:	e2 5f       	subi	r30, 0xF2	; 242
     408:	fe 4f       	sbci	r31, 0xFE	; 254
     40a:	01 90       	ld	r0, Z+
     40c:	f0 81       	ld	r31, Z
     40e:	e0 2d       	mov	r30, r0
     410:	e2 23       	and	r30, r18
     412:	f3 23       	and	r31, r19
     414:	30 97       	sbiw	r30, 0x00	; 0
     416:	11 f0       	breq	.+4      	; 0x41c <getpoint+0x2c>
     418:	e1 e0       	ldi	r30, 0x01	; 1
     41a:	f0 e0       	ldi	r31, 0x00	; 0
color += 1;

}
    

if (grnMatrix[yin] & 64 >> xin)
     41c:	ac 5f       	subi	r26, 0xFC	; 252
     41e:	be 4f       	sbci	r27, 0xFE	; 254
     420:	8d 91       	ld	r24, X+
     422:	9c 91       	ld	r25, X
     424:	28 23       	and	r18, r24
     426:	39 23       	and	r19, r25
     428:	23 2b       	or	r18, r19
     42a:	09 f0       	breq	.+2      	; 0x42e <getpoint+0x3e>
{// green
color += 2;
     42c:	32 96       	adiw	r30, 0x02	; 2

}
return color;
}
     42e:	cf 01       	movw	r24, r30
     430:	08 95       	ret

00000432 <drawpoint>:

    


void drawpoint(unsigned short xin, unsigned short yin, unsigned short color)
{
     432:	a8 2f       	mov	r26, r24

// for color input 0 = dark, 1 = red, 2 = green, 3 = orange    

if (color & 1)
     434:	40 ff       	sbrs	r20, 0
     436:	13 c0       	rjmp	.+38     	; 0x45e <drawpoint+0x2c>
{// red
    redMatrix[yin] |= 64 >> xin;
     438:	fb 01       	movw	r30, r22
     43a:	ee 0f       	add	r30, r30
     43c:	ff 1f       	adc	r31, r31
     43e:	e2 5f       	subi	r30, 0xF2	; 242
     440:	fe 4f       	sbci	r31, 0xFE	; 254
     442:	80 e4       	ldi	r24, 0x40	; 64
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	0a 2e       	mov	r0, r26
     448:	02 c0       	rjmp	.+4      	; 0x44e <drawpoint+0x1c>
     44a:	95 95       	asr	r25
     44c:	87 95       	ror	r24
     44e:	0a 94       	dec	r0
     450:	e2 f7       	brpl	.-8      	; 0x44a <drawpoint+0x18>
     452:	20 81       	ld	r18, Z
     454:	31 81       	ldd	r19, Z+1	; 0x01
     456:	82 2b       	or	r24, r18
     458:	93 2b       	or	r25, r19
     45a:	91 83       	std	Z+1, r25	; 0x01
     45c:	80 83       	st	Z, r24
}
    
if (color & 2)
     45e:	41 ff       	sbrs	r20, 1
     460:	12 c0       	rjmp	.+36     	; 0x486 <drawpoint+0x54>
{// green
grnMatrix[yin] |= 64 >> xin;
     462:	fb 01       	movw	r30, r22
     464:	ee 0f       	add	r30, r30
     466:	ff 1f       	adc	r31, r31
     468:	ec 5f       	subi	r30, 0xFC	; 252
     46a:	fe 4f       	sbci	r31, 0xFE	; 254
     46c:	80 e4       	ldi	r24, 0x40	; 64
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	02 c0       	rjmp	.+4      	; 0x476 <drawpoint+0x44>
     472:	95 95       	asr	r25
     474:	87 95       	ror	r24
     476:	aa 95       	dec	r26
     478:	e2 f7       	brpl	.-8      	; 0x472 <drawpoint+0x40>
     47a:	20 81       	ld	r18, Z
     47c:	31 81       	ldd	r19, Z+1	; 0x01
     47e:	82 2b       	or	r24, r18
     480:	93 2b       	or	r25, r19
     482:	91 83       	std	Z+1, r25	; 0x01
     484:	80 83       	st	Z, r24
     486:	08 95       	ret

00000488 <xdrawpoint>:
    
}


void xdrawpoint(unsigned short xin, unsigned short yin, unsigned short color)
{
     488:	28 2f       	mov	r18, r24
     48a:	db 01       	movw	r26, r22

// for color input 0 = dark, 1 = red, 2 = green, 3 = orange    

if (color & 1)
     48c:	40 ff       	sbrs	r20, 0
     48e:	0f c0       	rjmp	.+30     	; 0x4ae <xdrawpoint+0x26>
{// red
    redMatrix[yin] = 64 >> xin;
     490:	fb 01       	movw	r30, r22
     492:	ee 0f       	add	r30, r30
     494:	ff 1f       	adc	r31, r31
     496:	e2 5f       	subi	r30, 0xF2	; 242
     498:	fe 4f       	sbci	r31, 0xFE	; 254
     49a:	80 e4       	ldi	r24, 0x40	; 64
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	02 2e       	mov	r0, r18
     4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <xdrawpoint+0x1e>
     4a2:	95 95       	asr	r25
     4a4:	87 95       	ror	r24
     4a6:	0a 94       	dec	r0
     4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <xdrawpoint+0x1a>
     4aa:	91 83       	std	Z+1, r25	; 0x01
     4ac:	80 83       	st	Z, r24
}
    
if (color & 2)
     4ae:	41 ff       	sbrs	r20, 1
     4b0:	0d c0       	rjmp	.+26     	; 0x4cc <xdrawpoint+0x44>
{// green
grnMatrix[yin] = 64 >> xin;
     4b2:	aa 0f       	add	r26, r26
     4b4:	bb 1f       	adc	r27, r27
     4b6:	ac 5f       	subi	r26, 0xFC	; 252
     4b8:	be 4f       	sbci	r27, 0xFE	; 254
     4ba:	80 e4       	ldi	r24, 0x40	; 64
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	02 c0       	rjmp	.+4      	; 0x4c4 <xdrawpoint+0x3c>
     4c0:	95 95       	asr	r25
     4c2:	87 95       	ror	r24
     4c4:	2a 95       	dec	r18
     4c6:	e2 f7       	brpl	.-8      	; 0x4c0 <xdrawpoint+0x38>
     4c8:	8d 93       	st	X+, r24
     4ca:	9c 93       	st	X, r25
     4cc:	08 95       	ret

000004ce <erasepoint>:




void erasepoint(unsigned short xin, unsigned short yin)
{
     4ce:	fb 01       	movw	r30, r22
  
redMatrix[yin] &= ~(64 >> yin);
     4d0:	20 e4       	ldi	r18, 0x40	; 64
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	06 2e       	mov	r0, r22
     4d6:	02 c0       	rjmp	.+4      	; 0x4dc <erasepoint+0xe>
     4d8:	35 95       	asr	r19
     4da:	27 95       	ror	r18
     4dc:	0a 94       	dec	r0
     4de:	e2 f7       	brpl	.-8      	; 0x4d8 <erasepoint+0xa>
     4e0:	20 95       	com	r18
     4e2:	30 95       	com	r19
     4e4:	ee 0f       	add	r30, r30
     4e6:	ff 1f       	adc	r31, r31
     4e8:	df 01       	movw	r26, r30
     4ea:	a2 5f       	subi	r26, 0xF2	; 242
     4ec:	be 4f       	sbci	r27, 0xFE	; 254
     4ee:	8d 91       	ld	r24, X+
     4f0:	9c 91       	ld	r25, X
     4f2:	11 97       	sbiw	r26, 0x01	; 1
     4f4:	82 23       	and	r24, r18
     4f6:	93 23       	and	r25, r19
     4f8:	8d 93       	st	X+, r24
     4fa:	9c 93       	st	X, r25
grnMatrix[yin] &= ~(64 >> yin);
     4fc:	ec 5f       	subi	r30, 0xFC	; 252
     4fe:	fe 4f       	sbci	r31, 0xFE	; 254
     500:	80 81       	ld	r24, Z
     502:	91 81       	ldd	r25, Z+1	; 0x01
     504:	28 23       	and	r18, r24
     506:	39 23       	and	r19, r25
     508:	31 83       	std	Z+1, r19	; 0x01
     50a:	20 83       	st	Z, r18
    
}
     50c:	08 95       	ret

0000050e <eraseall>:



void eraseall(void)
{
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	90 e0       	ldi	r25, 0x00	; 0
unsigned short i=0;

while (i < 5) {
    
redMatrix[i] = 0;
     512:	fc 01       	movw	r30, r24
     514:	e2 5f       	subi	r30, 0xF2	; 242
     516:	fe 4f       	sbci	r31, 0xFE	; 254
     518:	11 82       	std	Z+1, r1	; 0x01
     51a:	10 82       	st	Z, r1
grnMatrix[i] = 0;
     51c:	fc 01       	movw	r30, r24
     51e:	ec 5f       	subi	r30, 0xFC	; 252
     520:	fe 4f       	sbci	r31, 0xFE	; 254
     522:	11 82       	std	Z+1, r1	; 0x01
     524:	10 82       	st	Z, r1
     526:	02 96       	adiw	r24, 0x02	; 2

void eraseall(void)
{
unsigned short i=0;

while (i < 5) {
     528:	8a 30       	cpi	r24, 0x0A	; 10
     52a:	91 05       	cpc	r25, r1
     52c:	91 f7       	brne	.-28     	; 0x512 <eraseall+0x4>
i++;

}


}
     52e:	08 95       	ret

00000530 <main>:
    
 


int main (void)
{ 
     530:	2f 92       	push	r2
     532:	3f 92       	push	r3
     534:	4f 92       	push	r4
     536:	5f 92       	push	r5
     538:	6f 92       	push	r6
     53a:	7f 92       	push	r7
     53c:	8f 92       	push	r8
     53e:	9f 92       	push	r9
     540:	af 92       	push	r10
     542:	bf 92       	push	r11
     544:	cf 92       	push	r12
     546:	df 92       	push	r13
     548:	ef 92       	push	r14
     54a:	ff 92       	push	r15
     54c:	0f 93       	push	r16
     54e:	1f 93       	push	r17
     550:	df 93       	push	r29
     552:	cf 93       	push	r28
     554:	cd b7       	in	r28, 0x3d	; 61
     556:	de b7       	in	r29, 0x3e	; 62
     558:	c8 5c       	subi	r28, 0xC8	; 200
     55a:	d1 40       	sbci	r29, 0x01	; 1
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	f8 94       	cli
     560:	de bf       	out	0x3e, r29	; 62
     562:	0f be       	out	0x3f, r0	; 63
     564:	cd bf       	out	0x3d, r28	; 61
 
DDRB = 250;
     566:	8a ef       	ldi	r24, 0xFA	; 250
     568:	84 b9       	out	0x04, r24	; 4
PORTB = 5;
     56a:	85 e0       	ldi	r24, 0x05	; 5
     56c:	85 b9       	out	0x05, r24	; 5
DDRC = 254;
     56e:	8e ef       	ldi	r24, 0xFE	; 254
     570:	87 b9       	out	0x07, r24	; 7
PORTC = 1;
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	88 b9       	out	0x08, r24	; 8
DDRD = 127;
     576:	8f e7       	ldi	r24, 0x7F	; 127
     578:	8a b9       	out	0x0a, r24	; 10
PORTD = 128;
     57a:	80 e8       	ldi	r24, 0x80	; 128
     57c:	8b b9       	out	0x0b, r24	; 11




TCCR1A = 242;	
     57e:	82 ef       	ldi	r24, 0xF2	; 242
     580:	80 93 80 00 	sts	0x0080, r24
TCCR1B = 25;	
     584:	89 e1       	ldi	r24, 0x19	; 25
     586:	80 93 81 00 	sts	0x0081, r24
OCR1B = 204;	
     58a:	8c ec       	ldi	r24, 0xCC	; 204
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	90 93 8b 00 	sts	0x008B, r25
     592:	80 93 8a 00 	sts	0x008A, r24
     596:	9e 01       	movw	r18, r28
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	cb 55       	subi	r28, 0x5B	; 91
     59e:	de 4f       	sbci	r29, 0xFE	; 254
     5a0:	39 83       	std	Y+1, r19	; 0x01
     5a2:	28 83       	st	Y, r18
     5a4:	c5 5a       	subi	r28, 0xA5	; 165
     5a6:	d1 40       	sbci	r29, 0x01	; 1
     5a8:	ce 01       	movw	r24, r28
     5aa:	8b 55       	subi	r24, 0x5B	; 91
     5ac:	9e 4f       	sbci	r25, 0xFE	; 254
     5ae:	cb 53       	subi	r28, 0x3B	; 59
     5b0:	de 4f       	sbci	r29, 0xFE	; 254
     5b2:	99 83       	std	Y+1, r25	; 0x01
     5b4:	88 83       	st	Y, r24
     5b6:	c5 5c       	subi	r28, 0xC5	; 197
     5b8:	d1 40       	sbci	r29, 0x01	; 1

    
    
bga[j].xpos = (rand() % length) + 6;
bga[j].ypos = rand() % 5;
bga[j].color = 1;
     5ba:	01 e0       	ldi	r16, 0x01	; 1
     5bc:	10 e0       	ldi	r17, 0x00	; 0
while (j < NumBadGuys)// position badguys
{

    
    
bga[j].xpos = (rand() % length) + 6;
     5be:	a9 d8       	rcall	.-3758   	; 0xfffff712 <__eeprom_end+0xff7ef712>
     5c0:	64 e6       	ldi	r22, 0x64	; 100
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	b5 d8       	rcall	.-3734   	; 0xfffff730 <__eeprom_end+0xff7ef730>
     5c6:	06 96       	adiw	r24, 0x06	; 6
     5c8:	cb 55       	subi	r28, 0x5B	; 91
     5ca:	de 4f       	sbci	r29, 0xFE	; 254
     5cc:	e8 81       	ld	r30, Y
     5ce:	f9 81       	ldd	r31, Y+1	; 0x01
     5d0:	c5 5a       	subi	r28, 0xA5	; 165
     5d2:	d1 40       	sbci	r29, 0x01	; 1
     5d4:	91 83       	std	Z+1, r25	; 0x01
     5d6:	80 83       	st	Z, r24
bga[j].ypos = rand() % 5;
     5d8:	9c d8       	rcall	.-3784   	; 0xfffff712 <__eeprom_end+0xff7ef712>
     5da:	65 e0       	ldi	r22, 0x05	; 5
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	bc d8       	rcall	.-3720   	; 0xfffff758 <__eeprom_end+0xff7ef758>
     5e0:	cb 55       	subi	r28, 0x5B	; 91
     5e2:	de 4f       	sbci	r29, 0xFE	; 254
     5e4:	e8 81       	ld	r30, Y
     5e6:	f9 81       	ldd	r31, Y+1	; 0x01
     5e8:	c5 5a       	subi	r28, 0xA5	; 165
     5ea:	d1 40       	sbci	r29, 0x01	; 1
     5ec:	93 83       	std	Z+3, r25	; 0x03
     5ee:	82 83       	std	Z+2, r24	; 0x02
bga[j].color = 1;
     5f0:	15 83       	std	Z+5, r17	; 0x05
     5f2:	04 83       	std	Z+4, r16	; 0x04
     5f4:	36 96       	adiw	r30, 0x06	; 6
     5f6:	cb 55       	subi	r28, 0x5B	; 91
     5f8:	de 4f       	sbci	r29, 0xFE	; 254
     5fa:	f9 83       	std	Y+1, r31	; 0x01
     5fc:	e8 83       	st	Y, r30
     5fe:	c5 5a       	subi	r28, 0xA5	; 165
     600:	d1 40       	sbci	r29, 0x01	; 1
}



j = 0;
while (j < NumBadGuys)// position badguys
     602:	cb 53       	subi	r28, 0x3B	; 59
     604:	de 4f       	sbci	r29, 0xFE	; 254
     606:	28 81       	ld	r18, Y
     608:	39 81       	ldd	r19, Y+1	; 0x01
     60a:	c5 5c       	subi	r28, 0xC5	; 197
     60c:	d1 40       	sbci	r29, 0x01	; 1
     60e:	e2 17       	cp	r30, r18
     610:	f3 07       	cpc	r31, r19
     612:	a9 f6       	brne	.-86     	; 0x5be <main+0x8e>
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned short i=0;

while (i < 5) {
    
redMatrix[i] = 0;
     618:	fc 01       	movw	r30, r24
     61a:	e2 5f       	subi	r30, 0xF2	; 242
     61c:	fe 4f       	sbci	r31, 0xFE	; 254
     61e:	11 82       	std	Z+1, r1	; 0x01
     620:	10 82       	st	Z, r1
grnMatrix[i] = 0;
     622:	fc 01       	movw	r30, r24
     624:	ec 5f       	subi	r30, 0xFC	; 252
     626:	fe 4f       	sbci	r31, 0xFE	; 254
     628:	11 82       	std	Z+1, r1	; 0x01
     62a:	10 82       	st	Z, r1
     62c:	02 96       	adiw	r24, 0x02	; 2

void eraseall(void)
{
unsigned short i=0;

while (i < 5) {
     62e:	8a 30       	cpi	r24, 0x0A	; 10
     630:	91 05       	cpc	r25, r1
     632:	91 f7       	brne	.-28     	; 0x618 <main+0xe8>
     634:	c5 55       	subi	r28, 0x55	; 85
     636:	de 4f       	sbci	r29, 0xFE	; 254
     638:	19 82       	std	Y+1, r1	; 0x01
     63a:	18 82       	st	Y, r1
     63c:	cb 5a       	subi	r28, 0xAB	; 171
     63e:	d1 40       	sbci	r29, 0x01	; 1
     640:	c7 55       	subi	r28, 0x57	; 87
     642:	de 4f       	sbci	r29, 0xFE	; 254
     644:	19 82       	std	Y+1, r1	; 0x01
     646:	18 82       	st	Y, r1
     648:	c9 5a       	subi	r28, 0xA9	; 169
     64a:	d1 40       	sbci	r29, 0x01	; 1
     64c:	c9 55       	subi	r28, 0x59	; 89
     64e:	de 4f       	sbci	r29, 0xFE	; 254
     650:	19 82       	std	Y+1, r1	; 0x01
     652:	18 82       	st	Y, r1
     654:	c7 5a       	subi	r28, 0xA7	; 167
     656:	d1 40       	sbci	r29, 0x01	; 1
     658:	66 24       	eor	r6, r6
     65a:	77 24       	eor	r7, r7
     65c:	ee 24       	eor	r14, r14
     65e:	ff 24       	eor	r15, r15
     660:	cf 53       	subi	r28, 0x3F	; 63
     662:	de 4f       	sbci	r29, 0xFE	; 254
     664:	19 82       	std	Y+1, r1	; 0x01
     666:	18 82       	st	Y, r1
     668:	c1 5c       	subi	r28, 0xC1	; 193
     66a:	d1 40       	sbci	r29, 0x01	; 1
     66c:	22 24       	eor	r2, r2
     66e:	33 24       	eor	r3, r3
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	c1 54       	subi	r28, 0x41	; 65
     676:	de 4f       	sbci	r29, 0xFE	; 254
     678:	99 83       	std	Y+1, r25	; 0x01
     67a:	88 83       	st	Y, r24
     67c:	cf 5b       	subi	r28, 0xBF	; 191
     67e:	d1 40       	sbci	r29, 0x01	; 1
     680:	88 24       	eor	r8, r8
     682:	99 24       	eor	r9, r9
     684:	44 24       	eor	r4, r4
     686:	55 24       	eor	r5, r5
     688:	e8 e5       	ldi	r30, 0x58	; 88
     68a:	f2 e0       	ldi	r31, 0x02	; 2
     68c:	c3 54       	subi	r28, 0x43	; 67
     68e:	de 4f       	sbci	r29, 0xFE	; 254
     690:	f9 83       	std	Y+1, r31	; 0x01
     692:	e8 83       	st	Y, r30
     694:	cd 5b       	subi	r28, 0xBD	; 189
     696:	d1 40       	sbci	r29, 0x01	; 1
     698:	24 e6       	ldi	r18, 0x64	; 100
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	c5 54       	subi	r28, 0x45	; 69
     69e:	de 4f       	sbci	r29, 0xFE	; 254
     6a0:	39 83       	std	Y+1, r19	; 0x01
     6a2:	28 83       	st	Y, r18
     6a4:	cb 5b       	subi	r28, 0xBB	; 187
     6a6:	d1 40       	sbci	r29, 0x01	; 1
     6a8:	c7 54       	subi	r28, 0x47	; 71
     6aa:	de 4f       	sbci	r29, 0xFE	; 254
     6ac:	19 82       	std	Y+1, r1	; 0x01
     6ae:	18 82       	st	Y, r1
     6b0:	c9 5b       	subi	r28, 0xB9	; 185
     6b2:	d1 40       	sbci	r29, 0x01	; 1
     6b4:	c9 54       	subi	r28, 0x49	; 73
     6b6:	de 4f       	sbci	r29, 0xFE	; 254
     6b8:	19 82       	std	Y+1, r1	; 0x01
     6ba:	18 82       	st	Y, r1
     6bc:	c7 5b       	subi	r28, 0xB7	; 183
     6be:	d1 40       	sbci	r29, 0x01	; 1
     6c0:	cb 54       	subi	r28, 0x4B	; 75
     6c2:	de 4f       	sbci	r29, 0xFE	; 254
     6c4:	19 82       	std	Y+1, r1	; 0x01
     6c6:	18 82       	st	Y, r1
     6c8:	c5 5b       	subi	r28, 0xB5	; 181
     6ca:	d1 40       	sbci	r29, 0x01	; 1
     6cc:	cd 54       	subi	r28, 0x4D	; 77
     6ce:	de 4f       	sbci	r29, 0xFE	; 254
     6d0:	19 82       	std	Y+1, r1	; 0x01
     6d2:	18 82       	st	Y, r1
     6d4:	c3 5b       	subi	r28, 0xB3	; 179
     6d6:	d1 40       	sbci	r29, 0x01	; 1
     6d8:	cf 54       	subi	r28, 0x4F	; 79
     6da:	de 4f       	sbci	r29, 0xFE	; 254
     6dc:	19 82       	std	Y+1, r1	; 0x01
     6de:	18 82       	st	Y, r1
     6e0:	c1 5b       	subi	r28, 0xB1	; 177
     6e2:	d1 40       	sbci	r29, 0x01	; 1
     6e4:	c1 55       	subi	r28, 0x51	; 81
     6e6:	de 4f       	sbci	r29, 0xFE	; 254
     6e8:	19 82       	std	Y+1, r1	; 0x01
     6ea:	18 82       	st	Y, r1
     6ec:	cf 5a       	subi	r28, 0xAF	; 175
     6ee:	d1 40       	sbci	r29, 0x01	; 1
     6f0:	c3 55       	subi	r28, 0x53	; 83
     6f2:	de 4f       	sbci	r29, 0xFE	; 254
     6f4:	19 82       	std	Y+1, r1	; 0x01
     6f6:	18 82       	st	Y, r1
     6f8:	cd 5a       	subi	r28, 0xAD	; 173
     6fa:	d1 40       	sbci	r29, 0x01	; 1
     6fc:	ce 01       	movw	r24, r28
     6fe:	89 55       	subi	r24, 0x59	; 89
     700:	9e 4f       	sbci	r25, 0xFE	; 254
     702:	c9 53       	subi	r28, 0x39	; 57
     704:	de 4f       	sbci	r29, 0xFE	; 254
     706:	99 83       	std	Y+1, r25	; 0x01
     708:	88 83       	st	Y, r24
     70a:	c7 5c       	subi	r28, 0xC7	; 199
     70c:	d1 40       	sbci	r29, 0x01	; 1
     70e:	ea e6       	ldi	r30, 0x6A	; 106
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	cd 53       	subi	r28, 0x3D	; 61
     714:	de 4f       	sbci	r29, 0xFE	; 254
     716:	f9 83       	std	Y+1, r31	; 0x01
     718:	e8 83       	st	Y, r30
     71a:	c3 5c       	subi	r28, 0xC3	; 195
     71c:	d1 40       	sbci	r29, 0x01	; 1
}


void lose(void) // 'you lose' display
{
redMatrix[0] = 127;
     71e:	9f e7       	ldi	r25, 0x7F	; 127
     720:	c9 2e       	mov	r12, r25
     722:	d1 2c       	mov	r13, r1
for (;;)  // main loop										
    {
    
    

if (zup == 1)
     724:	cd 54       	subi	r28, 0x4D	; 77
     726:	de 4f       	sbci	r29, 0xFE	; 254
     728:	28 81       	ld	r18, Y
     72a:	39 81       	ldd	r19, Y+1	; 0x01
     72c:	c3 5b       	subi	r28, 0xB3	; 179
     72e:	d1 40       	sbci	r29, 0x01	; 1
     730:	21 30       	cpi	r18, 0x01	; 1
     732:	31 05       	cpc	r19, r1
     734:	09 f4       	brne	.+2      	; 0x738 <main+0x208>
     736:	6c c5       	rjmp	.+2776   	; 0x1210 <main+0xce0>
{
zup = 2;
waitup = 0;
}
}
if (zup == 0)
     738:	cd 54       	subi	r28, 0x4D	; 77
     73a:	de 4f       	sbci	r29, 0xFE	; 254
     73c:	e8 81       	ld	r30, Y
     73e:	f9 81       	ldd	r31, Y+1	; 0x01
     740:	c3 5b       	subi	r28, 0xB3	; 179
     742:	d1 40       	sbci	r29, 0x01	; 1
     744:	ef 2b       	or	r30, r31
     746:	61 f4       	brne	.+24     	; 0x760 <main+0x230>
     748:	c7 55       	subi	r28, 0x57	; 87
     74a:	de 4f       	sbci	r29, 0xFE	; 254
     74c:	19 82       	std	Y+1, r1	; 0x01
     74e:	18 82       	st	Y, r1
     750:	c9 5a       	subi	r28, 0xA9	; 169
     752:	d1 40       	sbci	r29, 0x01	; 1
     754:	c1 55       	subi	r28, 0x51	; 81
     756:	de 4f       	sbci	r29, 0xFE	; 254
     758:	19 82       	std	Y+1, r1	; 0x01
     75a:	18 82       	st	Y, r1
     75c:	cf 5a       	subi	r28, 0xAF	; 175
     75e:	d1 40       	sbci	r29, 0x01	; 1
{
zoomup = 0;
waitup = 0;
}

if (zdown == 0)
     760:	cf 54       	subi	r28, 0x4F	; 79
     762:	de 4f       	sbci	r29, 0xFE	; 254
     764:	28 81       	ld	r18, Y
     766:	39 81       	ldd	r19, Y+1	; 0x01
     768:	c1 5b       	subi	r28, 0xB1	; 177
     76a:	d1 40       	sbci	r29, 0x01	; 1
     76c:	23 2b       	or	r18, r19
     76e:	09 f0       	breq	.+2      	; 0x772 <main+0x242>
     770:	26 c5       	rjmp	.+2636   	; 0x11be <main+0xc8e>
     772:	c3 55       	subi	r28, 0x53	; 83
     774:	de 4f       	sbci	r29, 0xFE	; 254
     776:	19 82       	std	Y+1, r1	; 0x01
     778:	18 82       	st	Y, r1
     77a:	cd 5a       	subi	r28, 0xAD	; 173
     77c:	d1 40       	sbci	r29, 0x01	; 1
     77e:	c5 55       	subi	r28, 0x55	; 85
     780:	de 4f       	sbci	r29, 0xFE	; 254
     782:	19 82       	std	Y+1, r1	; 0x01
     784:	18 82       	st	Y, r1
     786:	cb 5a       	subi	r28, 0xAB	; 171
     788:	d1 40       	sbci	r29, 0x01	; 1
zdown = 2;
waitdown = 0;
}
   }
   
    if (zup == 2) //zip up
     78a:	cd 54       	subi	r28, 0x4D	; 77
     78c:	de 4f       	sbci	r29, 0xFE	; 254
     78e:	88 81       	ld	r24, Y
     790:	99 81       	ldd	r25, Y+1	; 0x01
     792:	c3 5b       	subi	r28, 0xB3	; 179
     794:	d1 40       	sbci	r29, 0x01	; 1
     796:	02 97       	sbiw	r24, 0x02	; 2
     798:	69 f4       	brne	.+26     	; 0x7b4 <main+0x284>
{
zoomup++;
     79a:	c7 55       	subi	r28, 0x57	; 87
     79c:	de 4f       	sbci	r29, 0xFE	; 254
     79e:	e8 81       	ld	r30, Y
     7a0:	f9 81       	ldd	r31, Y+1	; 0x01
     7a2:	c9 5a       	subi	r28, 0xA9	; 169
     7a4:	d1 40       	sbci	r29, 0x01	; 1
     7a6:	31 96       	adiw	r30, 0x01	; 1
     7a8:	c7 55       	subi	r28, 0x57	; 87
     7aa:	de 4f       	sbci	r29, 0xFE	; 254
     7ac:	f9 83       	std	Y+1, r31	; 0x01
     7ae:	e8 83       	st	Y, r30
     7b0:	c9 5a       	subi	r28, 0xA9	; 169
     7b2:	d1 40       	sbci	r29, 0x01	; 1
    }
    
if (zdown == 2) // zip down
     7b4:	cf 54       	subi	r28, 0x4F	; 79
     7b6:	de 4f       	sbci	r29, 0xFE	; 254
     7b8:	28 81       	ld	r18, Y
     7ba:	39 81       	ldd	r19, Y+1	; 0x01
     7bc:	c1 5b       	subi	r28, 0xB1	; 177
     7be:	d1 40       	sbci	r29, 0x01	; 1
     7c0:	22 30       	cpi	r18, 0x02	; 2
     7c2:	31 05       	cpc	r19, r1
     7c4:	69 f4       	brne	.+26     	; 0x7e0 <main+0x2b0>
{
zoom ++;
     7c6:	c5 55       	subi	r28, 0x55	; 85
     7c8:	de 4f       	sbci	r29, 0xFE	; 254
     7ca:	88 81       	ld	r24, Y
     7cc:	99 81       	ldd	r25, Y+1	; 0x01
     7ce:	cb 5a       	subi	r28, 0xAB	; 171
     7d0:	d1 40       	sbci	r29, 0x01	; 1
     7d2:	01 96       	adiw	r24, 0x01	; 1
     7d4:	c5 55       	subi	r28, 0x55	; 85
     7d6:	de 4f       	sbci	r29, 0xFE	; 254
     7d8:	99 83       	std	Y+1, r25	; 0x01
     7da:	88 83       	st	Y, r24
     7dc:	cb 5a       	subi	r28, 0xAB	; 171
     7de:	d1 40       	sbci	r29, 0x01	; 1
}    

if (zoomup == 50)
     7e0:	c7 55       	subi	r28, 0x57	; 87
     7e2:	de 4f       	sbci	r29, 0xFE	; 254
     7e4:	e8 81       	ld	r30, Y
     7e6:	f9 81       	ldd	r31, Y+1	; 0x01
     7e8:	c9 5a       	subi	r28, 0xA9	; 169
     7ea:	d1 40       	sbci	r29, 0x01	; 1
     7ec:	f2 97       	sbiw	r30, 0x32	; 50
     7ee:	09 f4       	brne	.+2      	; 0x7f2 <main+0x2c2>
     7f0:	cf c4       	rjmp	.+2462   	; 0x1190 <main+0xc60>
    yc = 0;
zoomup = 0;
}


if (zoom == 50)
     7f2:	c5 55       	subi	r28, 0x55	; 85
     7f4:	de 4f       	sbci	r29, 0xFE	; 254
     7f6:	28 81       	ld	r18, Y
     7f8:	39 81       	ldd	r19, Y+1	; 0x01
     7fa:	cb 5a       	subi	r28, 0xAB	; 171
     7fc:	d1 40       	sbci	r29, 0x01	; 1
     7fe:	22 33       	cpi	r18, 0x32	; 50
     800:	31 05       	cpc	r19, r1
     802:	09 f4       	brne	.+2      	; 0x806 <main+0x2d6>
     804:	b7 c4       	rjmp	.+2414   	; 0x1174 <main+0xc44>
else
    yc = 4;
}
 

notechange ++;
     806:	c7 54       	subi	r28, 0x47	; 71
     808:	de 4f       	sbci	r29, 0xFE	; 254
     80a:	88 81       	ld	r24, Y
     80c:	99 81       	ldd	r25, Y+1	; 0x01
     80e:	c9 5b       	subi	r28, 0xB9	; 185
     810:	d1 40       	sbci	r29, 0x01	; 1
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	c7 54       	subi	r28, 0x47	; 71
     816:	de 4f       	sbci	r29, 0xFE	; 254
     818:	99 83       	std	Y+1, r25	; 0x01
     81a:	88 83       	st	Y, r24
     81c:	c9 5b       	subi	r28, 0xB9	; 185
     81e:	d1 40       	sbci	r29, 0x01	; 1


        
    waiter++;
     820:	08 94       	sec
     822:	e1 1c       	adc	r14, r1
     824:	f1 1c       	adc	r15, r1
    waiter2++;
    rcount++;
     826:	c9 55       	subi	r28, 0x59	; 89
     828:	de 4f       	sbci	r29, 0xFE	; 254
     82a:	e8 81       	ld	r30, Y
     82c:	f9 81       	ldd	r31, Y+1	; 0x01
     82e:	c7 5a       	subi	r28, 0xA7	; 167
     830:	d1 40       	sbci	r29, 0x01	; 1
     832:	31 96       	adiw	r30, 0x01	; 1
     834:	c9 55       	subi	r28, 0x59	; 89
     836:	de 4f       	sbci	r29, 0xFE	; 254
     838:	f9 83       	std	Y+1, r31	; 0x01
     83a:	e8 83       	st	Y, r30
     83c:	c7 5a       	subi	r28, 0xA7	; 167
     83e:	d1 40       	sbci	r29, 0x01	; 1
    
if (rcount == 50)
     840:	f2 97       	sbiw	r30, 0x32	; 50
     842:	09 f4       	brne	.+2      	; 0x846 <main+0x316>
     844:	43 c4       	rjmp	.+2182   	; 0x10cc <main+0xb9c>
    redMatrix[yin] |= 64 >> xin;
}
    
if (color & 2)
{// green
grnMatrix[yin] |= 64 >> xin;
     846:	f3 01       	movw	r30, r6
     848:	ee 0f       	add	r30, r30
     84a:	ff 1f       	adc	r31, r31
     84c:	ec 5f       	subi	r30, 0xFC	; 252
     84e:	fe 4f       	sbci	r31, 0xFE	; 254
     850:	80 81       	ld	r24, Z
     852:	91 81       	ldd	r25, Z+1	; 0x01
     854:	80 64       	ori	r24, 0x40	; 64
     856:	91 83       	std	Z+1, r25	; 0x01
     858:	80 83       	st	Z, r24



    drawpoint(xc,yc,2);//draw player
    
    display();
     85a:	2e dc       	rcall	.-1956   	; 0xb8 <display>
    
    
  
   if (notechange == 500) //C
     85c:	c7 54       	subi	r28, 0x47	; 71
     85e:	de 4f       	sbci	r29, 0xFE	; 254
     860:	88 81       	ld	r24, Y
     862:	99 81       	ldd	r25, Y+1	; 0x01
     864:	c9 5b       	subi	r28, 0xB9	; 185
     866:	d1 40       	sbci	r29, 0x01	; 1
     868:	84 5f       	subi	r24, 0xF4	; 244
     86a:	91 40       	sbci	r25, 0x01	; 1
     86c:	a1 f4       	brne	.+40     	; 0x896 <main+0x366>
{
note++;
     86e:	c9 54       	subi	r28, 0x49	; 73
     870:	de 4f       	sbci	r29, 0xFE	; 254
     872:	28 81       	ld	r18, Y
     874:	39 81       	ldd	r19, Y+1	; 0x01
     876:	c7 5b       	subi	r28, 0xB7	; 183
     878:	d1 40       	sbci	r29, 0x01	; 1
     87a:	2f 5f       	subi	r18, 0xFF	; 255
     87c:	3f 4f       	sbci	r19, 0xFF	; 255
     87e:	c9 54       	subi	r28, 0x49	; 73
     880:	de 4f       	sbci	r29, 0xFE	; 254
     882:	39 83       	std	Y+1, r19	; 0x01
     884:	28 83       	st	Y, r18
     886:	c7 5b       	subi	r28, 0xB7	; 183
     888:	d1 40       	sbci	r29, 0x01	; 1
     88a:	c7 54       	subi	r28, 0x47	; 71
     88c:	de 4f       	sbci	r29, 0xFE	; 254
     88e:	19 82       	std	Y+1, r1	; 0x01
     890:	18 82       	st	Y, r1
     892:	c9 5b       	subi	r28, 0xB9	; 185
     894:	d1 40       	sbci	r29, 0x01	; 1
notechange = 0;
}
if (note == 1)    
     896:	c9 54       	subi	r28, 0x49	; 73
     898:	de 4f       	sbci	r29, 0xFE	; 254
     89a:	88 81       	ld	r24, Y
     89c:	99 81       	ldd	r25, Y+1	; 0x01
     89e:	c7 5b       	subi	r28, 0xB7	; 183
     8a0:	d1 40       	sbci	r29, 0x01	; 1
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <main+0x378>
     8a6:	ca c3       	rjmp	.+1940   	; 0x103c <main+0xb0c>
{
ICR1 = 15296;	
OCR1A = 7648;
}
    
    if (note == 2) // C# / Db
     8a8:	c9 54       	subi	r28, 0x49	; 73
     8aa:	de 4f       	sbci	r29, 0xFE	; 254
     8ac:	e8 81       	ld	r30, Y
     8ae:	f9 81       	ldd	r31, Y+1	; 0x01
     8b0:	c7 5b       	subi	r28, 0xB7	; 183
     8b2:	d1 40       	sbci	r29, 0x01	; 1
     8b4:	32 97       	sbiw	r30, 0x02	; 2
     8b6:	09 f0       	breq	.+2      	; 0x8ba <main+0x38a>
     8b8:	4d c6       	rjmp	.+3226   	; 0x1554 <main+0x1024>
{
ICR1 = 14440;	
     8ba:	88 e6       	ldi	r24, 0x68	; 104
     8bc:	98 e3       	ldi	r25, 0x38	; 56
     8be:	90 93 87 00 	sts	0x0087, r25
     8c2:	80 93 86 00 	sts	0x0086, r24
OCR1A = 7220;
     8c6:	84 e3       	ldi	r24, 0x34	; 52
     8c8:	9c e1       	ldi	r25, 0x1C	; 28
     8ca:	90 93 89 00 	sts	0x0089, r25
     8ce:	80 93 88 00 	sts	0x0088, r24
{
ICR1 = 12136;	
OCR1A = 6069;
}

   if (note == 6) // F
     8d2:	c9 54       	subi	r28, 0x49	; 73
     8d4:	de 4f       	sbci	r29, 0xFE	; 254
     8d6:	28 81       	ld	r18, Y
     8d8:	39 81       	ldd	r19, Y+1	; 0x01
     8da:	c7 5b       	subi	r28, 0xB7	; 183
     8dc:	d1 40       	sbci	r29, 0x01	; 1
     8de:	26 30       	cpi	r18, 0x06	; 6
     8e0:	31 05       	cpc	r19, r1
     8e2:	09 f0       	breq	.+2      	; 0x8e6 <main+0x3b6>
     8e4:	4d c6       	rjmp	.+3226   	; 0x1580 <main+0x1050>
{
ICR1 = 11461;	
     8e6:	85 ec       	ldi	r24, 0xC5	; 197
     8e8:	9c e2       	ldi	r25, 0x2C	; 44
     8ea:	90 93 87 00 	sts	0x0087, r25
     8ee:	80 93 86 00 	sts	0x0086, r24
OCR1A = 5730;
     8f2:	82 e6       	ldi	r24, 0x62	; 98
     8f4:	96 e1       	ldi	r25, 0x16	; 22
     8f6:	90 93 89 00 	sts	0x0089, r25
     8fa:	80 93 88 00 	sts	0x0088, r24
{
ICR1 = 9636;	
OCR1A = 4813;
}

   if (note == 10) // A 
     8fe:	c9 54       	subi	r28, 0x49	; 73
     900:	de 4f       	sbci	r29, 0xFE	; 254
     902:	28 81       	ld	r18, Y
     904:	39 81       	ldd	r19, Y+1	; 0x01
     906:	c7 5b       	subi	r28, 0xB7	; 183
     908:	d1 40       	sbci	r29, 0x01	; 1
     90a:	2a 30       	cpi	r18, 0x0A	; 10
     90c:	31 05       	cpc	r19, r1
     90e:	09 f0       	breq	.+2      	; 0x912 <main+0x3e2>
     910:	4c c6       	rjmp	.+3224   	; 0x15aa <main+0x107a>
{
ICR1 = 9090;	
     912:	82 e8       	ldi	r24, 0x82	; 130
     914:	93 e2       	ldi	r25, 0x23	; 35
     916:	90 93 87 00 	sts	0x0087, r25
     91a:	80 93 86 00 	sts	0x0086, r24
OCR1A = 4545;
     91e:	e1 ec       	ldi	r30, 0xC1	; 193
     920:	f1 e1       	ldi	r31, 0x11	; 17
     922:	f0 93 89 00 	sts	0x0089, r31
     926:	e0 93 88 00 	sts	0x0088, r30
    note = 0;


// Test buttons!

if ((PINB & 1) == 0) // nw, switch 1
     92a:	18 99       	sbic	0x03, 0	; 3
     92c:	a9 c4       	rjmp	.+2386   	; 0x1280 <main+0xd50>
    {
buttons |= 1;// set bit 1
     92e:	c4 01       	movw	r24, r8
     930:	81 60       	ori	r24, 0x01	; 1
if (zup < 2)
     932:	cd 54       	subi	r28, 0x4D	; 77
     934:	de 4f       	sbci	r29, 0xFE	; 254
     936:	e8 81       	ld	r30, Y
     938:	f9 81       	ldd	r31, Y+1	; 0x01
     93a:	c3 5b       	subi	r28, 0xB3	; 179
     93c:	d1 40       	sbci	r29, 0x01	; 1
     93e:	32 97       	sbiw	r30, 0x02	; 2
     940:	08 f4       	brcc	.+2      	; 0x944 <main+0x414>
     942:	4a c6       	rjmp	.+3220   	; 0x15d8 <main+0x10a8>

    
    
    

if ((PINB & 4) == 0) // sw, switch 2
     944:	1a 99       	sbic	0x03, 2	; 3
     946:	84 c4       	rjmp	.+2312   	; 0x1250 <main+0xd20>
     { 
	 buttons |= 2;// set bit 2
     948:	82 60       	ori	r24, 0x02	; 2
     if (zdown < 2)
     94a:	cf 54       	subi	r28, 0x4F	; 79
     94c:	de 4f       	sbci	r29, 0xFE	; 254
     94e:	e8 81       	ld	r30, Y
     950:	f9 81       	ldd	r31, Y+1	; 0x01
     952:	c1 5b       	subi	r28, 0xB1	; 177
     954:	d1 40       	sbci	r29, 0x01	; 1
     956:	32 97       	sbiw	r30, 0x02	; 2
     958:	08 f4       	brcc	.+2      	; 0x95c <main+0x42c>
     95a:	88 c6       	rjmp	.+3344   	; 0x166c <main+0x113c>
    
 



if ((PINC & 1) == 0) // se, switch 3
     95c:	30 99       	sbic	0x06, 0	; 6
     95e:	83 c4       	rjmp	.+2310   	; 0x1266 <main+0xd36>
     buttons |= 4;// set bit 3
     960:	84 60       	ori	r24, 0x04	; 4

    
    
    
    
if ((PIND & 128) == 0) // ne, switch 4
     962:	4f 99       	sbic	0x09, 7	; 9
     964:	84 c4       	rjmp	.+2312   	; 0x126e <main+0xd3e>
     buttons |= 8;// set bit 4
     966:	78 e0       	ldi	r23, 0x08	; 8
     968:	87 2e       	mov	r8, r23
     96a:	91 2c       	mov	r9, r1
     96c:	88 2a       	or	r8, r24
     96e:	99 2a       	or	r9, r25
    
    
// END TEST BUTTONS    

    
if (waiter == 100)     
     970:	34 e6       	ldi	r19, 0x64	; 100
     972:	e3 16       	cp	r14, r19
     974:	f1 04       	cpc	r15, r1
     976:	09 f4       	brne	.+2      	; 0x97a <main+0x44a>
     978:	e4 c0       	rjmp	.+456    	; 0xb42 <main+0x612>
notechange ++;


        
    waiter++;
    waiter2++;
     97a:	cf 53       	subi	r28, 0x3F	; 63
     97c:	de 4f       	sbci	r29, 0xFE	; 254
     97e:	28 81       	ld	r18, Y
     980:	39 81       	ldd	r19, Y+1	; 0x01
     982:	c1 5c       	subi	r28, 0xC1	; 193
     984:	d1 40       	sbci	r29, 0x01	; 1
     986:	2f 5f       	subi	r18, 0xFF	; 255
     988:	3f 4f       	sbci	r19, 0xFF	; 255
     98a:	cf 53       	subi	r28, 0x3F	; 63
     98c:	de 4f       	sbci	r29, 0xFE	; 254
     98e:	39 83       	std	Y+1, r19	; 0x01
     990:	28 83       	st	Y, r18
     992:	c1 5c       	subi	r28, 0xC1	; 193
     994:	d1 40       	sbci	r29, 0x01	; 1
}
    

    
    
if (waiter2 == speed)    // move badguys
     996:	c3 54       	subi	r28, 0x43	; 67
     998:	de 4f       	sbci	r29, 0xFE	; 254
     99a:	88 81       	ld	r24, Y
     99c:	99 81       	ldd	r25, Y+1	; 0x01
     99e:	cd 5b       	subi	r28, 0xBD	; 189
     9a0:	d1 40       	sbci	r29, 0x01	; 1
     9a2:	28 17       	cp	r18, r24
     9a4:	39 07       	cpc	r19, r25
     9a6:	09 f4       	brne	.+2      	; 0x9aa <main+0x47a>
     9a8:	aa c0       	rjmp	.+340    	; 0xafe <main+0x5ce>
    
     
    
}

if (waiter3 == length + 6)   //next level
     9aa:	cd 53       	subi	r28, 0x3D	; 61
     9ac:	de 4f       	sbci	r29, 0xFE	; 254
     9ae:	e8 81       	ld	r30, Y
     9b0:	f9 81       	ldd	r31, Y+1	; 0x01
     9b2:	c3 5c       	subi	r28, 0xC3	; 195
     9b4:	d1 40       	sbci	r29, 0x01	; 1
     9b6:	e2 15       	cp	r30, r2
     9b8:	f3 05       	cpc	r31, r3
     9ba:	09 f0       	breq	.+2      	; 0x9be <main+0x48e>
     9bc:	b3 ce       	rjmp	.-666    	; 0x724 <main+0x1f4>
{
waiter3 = 0;
speed -= 25;
     9be:	c3 54       	subi	r28, 0x43	; 67
     9c0:	de 4f       	sbci	r29, 0xFE	; 254
     9c2:	28 81       	ld	r18, Y
     9c4:	39 81       	ldd	r19, Y+1	; 0x01
     9c6:	cd 5b       	subi	r28, 0xBD	; 189
     9c8:	d1 40       	sbci	r29, 0x01	; 1
     9ca:	29 51       	subi	r18, 0x19	; 25
     9cc:	30 40       	sbci	r19, 0x00	; 0
     9ce:	c3 54       	subi	r28, 0x43	; 67
     9d0:	de 4f       	sbci	r29, 0xFE	; 254
     9d2:	39 83       	std	Y+1, r19	; 0x01
     9d4:	28 83       	st	Y, r18
     9d6:	cd 5b       	subi	r28, 0xBD	; 189
     9d8:	d1 40       	sbci	r29, 0x01	; 1
length -= 10;
     9da:	c5 54       	subi	r28, 0x45	; 69
     9dc:	de 4f       	sbci	r29, 0xFE	; 254
     9de:	88 81       	ld	r24, Y
     9e0:	99 81       	ldd	r25, Y+1	; 0x01
     9e2:	cb 5b       	subi	r28, 0xBB	; 187
     9e4:	d1 40       	sbci	r29, 0x01	; 1
     9e6:	0a 97       	sbiw	r24, 0x0a	; 10
     9e8:	c5 54       	subi	r28, 0x45	; 69
     9ea:	de 4f       	sbci	r29, 0xFE	; 254
     9ec:	99 83       	std	Y+1, r25	; 0x01
     9ee:	88 83       	st	Y, r24
     9f0:	cb 5b       	subi	r28, 0xBB	; 187
     9f2:	d1 40       	sbci	r29, 0x01	; 1
bulletcount ++;

if (length < 15)
     9f4:	0f 97       	sbiw	r24, 0x0f	; 15
     9f6:	80 f4       	brcc	.+32     	; 0xa18 <main+0x4e8>
{
length = 100;
speed -= 25;
     9f8:	29 51       	subi	r18, 0x19	; 25
     9fa:	30 40       	sbci	r19, 0x00	; 0
     9fc:	c3 54       	subi	r28, 0x43	; 67
     9fe:	de 4f       	sbci	r29, 0xFE	; 254
     a00:	39 83       	std	Y+1, r19	; 0x01
     a02:	28 83       	st	Y, r18
     a04:	cd 5b       	subi	r28, 0xBD	; 189
     a06:	d1 40       	sbci	r29, 0x01	; 1
     a08:	e4 e6       	ldi	r30, 0x64	; 100
     a0a:	f0 e0       	ldi	r31, 0x00	; 0
     a0c:	c5 54       	subi	r28, 0x45	; 69
     a0e:	de 4f       	sbci	r29, 0xFE	; 254
     a10:	f9 83       	std	Y+1, r31	; 0x01
     a12:	e8 83       	st	Y, r30
     a14:	cb 5b       	subi	r28, 0xBB	; 187
     a16:	d1 40       	sbci	r29, 0x01	; 1
}
if (speed < 100)
     a18:	c3 54       	subi	r28, 0x43	; 67
     a1a:	de 4f       	sbci	r29, 0xFE	; 254
     a1c:	28 81       	ld	r18, Y
     a1e:	39 81       	ldd	r19, Y+1	; 0x01
     a20:	cd 5b       	subi	r28, 0xBD	; 189
     a22:	d1 40       	sbci	r29, 0x01	; 1
     a24:	24 36       	cpi	r18, 0x64	; 100
     a26:	31 05       	cpc	r19, r1
     a28:	40 f4       	brcc	.+16     	; 0xa3a <main+0x50a>
    speed -= 50;
     a2a:	22 53       	subi	r18, 0x32	; 50
     a2c:	30 40       	sbci	r19, 0x00	; 0
     a2e:	c3 54       	subi	r28, 0x43	; 67
     a30:	de 4f       	sbci	r29, 0xFE	; 254
     a32:	39 83       	std	Y+1, r19	; 0x01
     a34:	28 83       	st	Y, r18
     a36:	cd 5b       	subi	r28, 0xBD	; 189
     a38:	d1 40       	sbci	r29, 0x01	; 1
     a3a:	44 24       	eor	r4, r4
     a3c:	55 24       	eor	r5, r5

}

void levelup(void) // next level
{
grnMatrix[0] = 127;
     a3e:	d0 92 05 01 	sts	0x0105, r13
     a42:	c0 92 04 01 	sts	0x0104, r12
grnMatrix[1] = 127;
     a46:	d0 92 07 01 	sts	0x0107, r13
     a4a:	c0 92 06 01 	sts	0x0106, r12
grnMatrix[2] = 127;
     a4e:	d0 92 09 01 	sts	0x0109, r13
     a52:	c0 92 08 01 	sts	0x0108, r12
grnMatrix[3] = 127;
     a56:	d0 92 0b 01 	sts	0x010B, r13
     a5a:	c0 92 0a 01 	sts	0x010A, r12
grnMatrix[4] = 127;
     a5e:	d0 92 0d 01 	sts	0x010D, r13
     a62:	c0 92 0c 01 	sts	0x010C, r12

loser = 0;
while (loser <300)
{
    levelup();
    display();
     a66:	28 db       	rcall	.-2480   	; 0xb8 <display>
    
    loser++;
     a68:	08 94       	sec
     a6a:	41 1c       	adc	r4, r1
     a6c:	51 1c       	adc	r5, r1
if (speed < 100)
    speed -= 50;


loser = 0;
while (loser <300)
     a6e:	3c e2       	ldi	r19, 0x2C	; 44
     a70:	43 16       	cp	r4, r19
     a72:	31 e0       	ldi	r19, 0x01	; 1
     a74:	53 06       	cpc	r5, r19
     a76:	19 f7       	brne	.-58     	; 0xa3e <main+0x50e>
     a78:	8e 01       	movw	r16, r28
     a7a:	0f 5f       	subi	r16, 0xFF	; 255
     a7c:	1f 4f       	sbci	r17, 0xFF	; 255
while (j < NumBadGuys)
{

    
    
bga[j].xpos = (rand() % length) + 5;
     a7e:	49 d6       	rcall	.+3218   	; 0x1712 <rand>
     a80:	c5 54       	subi	r28, 0x45	; 69
     a82:	de 4f       	sbci	r29, 0xFE	; 254
     a84:	68 81       	ld	r22, Y
     a86:	79 81       	ldd	r23, Y+1	; 0x01
     a88:	cb 5b       	subi	r28, 0xBB	; 187
     a8a:	d1 40       	sbci	r29, 0x01	; 1
     a8c:	51 d6       	rcall	.+3234   	; 0x1730 <__udivmodhi4>
     a8e:	05 96       	adiw	r24, 0x05	; 5
     a90:	f8 01       	movw	r30, r16
     a92:	91 83       	std	Z+1, r25	; 0x01
     a94:	80 83       	st	Z, r24
bga[j].ypos = rand() % 5;
     a96:	3d d6       	rcall	.+3194   	; 0x1712 <rand>
     a98:	65 e0       	ldi	r22, 0x05	; 5
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	5d d6       	rcall	.+3258   	; 0x1758 <__divmodhi4>
     a9e:	f8 01       	movw	r30, r16
     aa0:	93 83       	std	Z+3, r25	; 0x03
     aa2:	82 83       	std	Z+2, r24	; 0x02
bga[j].color = 1;
     aa4:	21 e0       	ldi	r18, 0x01	; 1
     aa6:	30 e0       	ldi	r19, 0x00	; 0
     aa8:	35 83       	std	Z+5, r19	; 0x05
     aaa:	24 83       	std	Z+4, r18	; 0x04
     aac:	0a 5f       	subi	r16, 0xFA	; 250
     aae:	1f 4f       	sbci	r17, 0xFF	; 255
}



j = 0;
while (j < NumBadGuys)
     ab0:	cb 53       	subi	r28, 0x3B	; 59
     ab2:	de 4f       	sbci	r29, 0xFE	; 254
     ab4:	88 81       	ld	r24, Y
     ab6:	99 81       	ldd	r25, Y+1	; 0x01
     ab8:	c5 5c       	subi	r28, 0xC5	; 197
     aba:	d1 40       	sbci	r29, 0x01	; 1
     abc:	80 17       	cp	r24, r16
     abe:	91 07       	cpc	r25, r17
     ac0:	f1 f6       	brne	.-68     	; 0xa7e <main+0x54e>
if (waiter3 == length + 6)   //next level
{
waiter3 = 0;
speed -= 25;
length -= 10;
bulletcount ++;
     ac2:	c1 54       	subi	r28, 0x41	; 65
     ac4:	de 4f       	sbci	r29, 0xFE	; 254
     ac6:	e8 81       	ld	r30, Y
     ac8:	f9 81       	ldd	r31, Y+1	; 0x01
     aca:	cf 5b       	subi	r28, 0xBF	; 191
     acc:	d1 40       	sbci	r29, 0x01	; 1
     ace:	31 96       	adiw	r30, 0x01	; 1
     ad0:	c1 54       	subi	r28, 0x41	; 65
     ad2:	de 4f       	sbci	r29, 0xFE	; 254
     ad4:	f9 83       	std	Y+1, r31	; 0x01
     ad6:	e8 83       	st	Y, r30
     ad8:	cf 5b       	subi	r28, 0xBF	; 191
     ada:	d1 40       	sbci	r29, 0x01	; 1
     adc:	22 24       	eor	r2, r2
     ade:	33 24       	eor	r3, r3
     ae0:	c5 54       	subi	r28, 0x45	; 69
     ae2:	de 4f       	sbci	r29, 0xFE	; 254
     ae4:	28 81       	ld	r18, Y
     ae6:	39 81       	ldd	r19, Y+1	; 0x01
     ae8:	cb 5b       	subi	r28, 0xBB	; 187
     aea:	d1 40       	sbci	r29, 0x01	; 1
     aec:	2a 5f       	subi	r18, 0xFA	; 250
     aee:	3f 4f       	sbci	r19, 0xFF	; 255
     af0:	cd 53       	subi	r28, 0x3D	; 61
     af2:	de 4f       	sbci	r29, 0xFE	; 254
     af4:	39 83       	std	Y+1, r19	; 0x01
     af6:	28 83       	st	Y, r18
     af8:	c3 5c       	subi	r28, 0xC3	; 195
     afa:	d1 40       	sbci	r29, 0x01	; 1
     afc:	13 ce       	rjmp	.-986    	; 0x724 <main+0x1f4>
}
    

    
    
if (waiter2 == speed)    // move badguys
     afe:	fe 01       	movw	r30, r28
     b00:	31 96       	adiw	r30, 0x01	; 1
     b02:	0a c0       	rjmp	.+20     	; 0xb18 <main+0x5e8>
j = 0;
while (j < NumBadGuys)
    {
        bga[j].xpos--;
	if (bga[j].xpos == -1)
	    bga[j].color = 0;
     b04:	36 96       	adiw	r30, 0x06	; 6
    
if (waiter2 == speed)    // move badguys
{

j = 0;
while (j < NumBadGuys)
     b06:	cb 53       	subi	r28, 0x3B	; 59
     b08:	de 4f       	sbci	r29, 0xFE	; 254
     b0a:	88 81       	ld	r24, Y
     b0c:	99 81       	ldd	r25, Y+1	; 0x01
     b0e:	c5 5c       	subi	r28, 0xC5	; 197
     b10:	d1 40       	sbci	r29, 0x01	; 1
     b12:	8e 17       	cp	r24, r30
     b14:	9f 07       	cpc	r25, r31
     b16:	59 f0       	breq	.+22     	; 0xb2e <main+0x5fe>
    {
        bga[j].xpos--;
     b18:	80 81       	ld	r24, Z
     b1a:	91 81       	ldd	r25, Z+1	; 0x01
     b1c:	01 97       	sbiw	r24, 0x01	; 1
     b1e:	91 83       	std	Z+1, r25	; 0x01
     b20:	80 83       	st	Z, r24
	if (bga[j].xpos == -1)
     b22:	8f 5f       	subi	r24, 0xFF	; 255
     b24:	9f 4f       	sbci	r25, 0xFF	; 255
     b26:	71 f7       	brne	.-36     	; 0xb04 <main+0x5d4>
	    bga[j].color = 0;
     b28:	15 82       	std	Z+5, r1	; 0x05
     b2a:	14 82       	std	Z+4, r1	; 0x04
     b2c:	eb cf       	rjmp	.-42     	; 0xb04 <main+0x5d4>
	
	j++;
    }
    
waiter2 = 0;
waiter3 ++;
     b2e:	08 94       	sec
     b30:	21 1c       	adc	r2, r1
     b32:	31 1c       	adc	r3, r1
     b34:	cf 53       	subi	r28, 0x3F	; 63
     b36:	de 4f       	sbci	r29, 0xFE	; 254
     b38:	19 82       	std	Y+1, r1	; 0x01
     b3a:	18 82       	st	Y, r1
     b3c:	c1 5c       	subi	r28, 0xC1	; 193
     b3e:	d1 40       	sbci	r29, 0x01	; 1
     b40:	34 cf       	rjmp	.-408    	; 0x9aa <main+0x47a>
    
    
// END TEST BUTTONS    

    
if (waiter == 100)     
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned short i=0;

while (i < 5) {
    
redMatrix[i] = 0;
     b46:	fc 01       	movw	r30, r24
     b48:	e2 5f       	subi	r30, 0xF2	; 242
     b4a:	fe 4f       	sbci	r31, 0xFE	; 254
     b4c:	11 82       	std	Z+1, r1	; 0x01
     b4e:	10 82       	st	Z, r1
grnMatrix[i] = 0;
     b50:	fc 01       	movw	r30, r24
     b52:	ec 5f       	subi	r30, 0xFC	; 252
     b54:	fe 4f       	sbci	r31, 0xFE	; 254
     b56:	11 82       	std	Z+1, r1	; 0x01
     b58:	10 82       	st	Z, r1
     b5a:	02 96       	adiw	r24, 0x02	; 2

void eraseall(void)
{
unsigned short i=0;

while (i < 5) {
     b5c:	8a 30       	cpi	r24, 0x0A	; 10
     b5e:	91 05       	cpc	r25, r1
     b60:	91 f7       	brne	.-28     	; 0xb46 <main+0x616>





if (buttons & 16) // up
     b62:	84 fe       	sbrs	r8, 4
     b64:	0a c0       	rjmp	.+20     	; 0xb7a <main+0x64a>
{
if (yc > 0)
     b66:	61 14       	cp	r6, r1
     b68:	71 04       	cpc	r7, r1
     b6a:	19 f0       	breq	.+6      	; 0xb72 <main+0x642>
    yc--;
     b6c:	08 94       	sec
     b6e:	61 08       	sbc	r6, r1
     b70:	71 08       	sbc	r7, r1
else
    yc = 0;
buttons &= ~(16);
     b72:	8f ee       	ldi	r24, 0xEF	; 239
     b74:	9f ef       	ldi	r25, 0xFF	; 255
     b76:	88 22       	and	r8, r24
     b78:	99 22       	and	r9, r25
}




if (buttons & 32) // down
     b7a:	85 fe       	sbrs	r8, 5
     b7c:	0c c0       	rjmp	.+24     	; 0xb96 <main+0x666>
{
if (yc < 4)
     b7e:	94 e0       	ldi	r25, 0x04	; 4
     b80:	69 16       	cp	r6, r25
     b82:	71 04       	cpc	r7, r1
     b84:	08 f4       	brcc	.+2      	; 0xb88 <main+0x658>
     b86:	e2 c4       	rjmp	.+2500   	; 0x154c <main+0x101c>
     b88:	54 e0       	ldi	r21, 0x04	; 4
     b8a:	65 2e       	mov	r6, r21
     b8c:	71 2c       	mov	r7, r1
    yc++;
else
    yc = 4;
buttons &= ~(32);
     b8e:	ef ed       	ldi	r30, 0xDF	; 223
     b90:	ff ef       	ldi	r31, 0xFF	; 255
     b92:	8e 22       	and	r8, r30
     b94:	9f 22       	and	r9, r31
}




if (buttons & 64) // fire
     b96:	86 fe       	sbrs	r8, 6
     b98:	41 c0       	rjmp	.+130    	; 0xc1c <main+0x6ec>
   
   
     j = 0;
    while (j < db)
    {
        display();
     b9a:	8e da       	rcall	.-2788   	; 0xb8 <display>
    j++;
    }
    
    
    
    grnMatrix[yc] = 32;
     b9c:	73 01       	movw	r14, r6
     b9e:	ee 0c       	add	r14, r14
     ba0:	ff 1c       	adc	r15, r15
     ba2:	f7 01       	movw	r30, r14
     ba4:	ec 5f       	subi	r30, 0xFC	; 252
     ba6:	fe 4f       	sbci	r31, 0xFE	; 254
     ba8:	80 e2       	ldi	r24, 0x20	; 32
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	91 83       	std	Z+1, r25	; 0x01
     bae:	80 83       	st	Z, r24
    redMatrix[yc] = 32;
     bb0:	f7 01       	movw	r30, r14
     bb2:	e2 5f       	subi	r30, 0xF2	; 242
     bb4:	fe 4f       	sbci	r31, 0xFE	; 254
     bb6:	91 83       	std	Z+1, r25	; 0x01
     bb8:	80 83       	st	Z, r24
     bba:	5e 01       	movw	r10, r28
     bbc:	08 94       	sec
     bbe:	a1 1c       	adc	r10, r1
     bc0:	b1 1c       	adc	r11, r1
     bc2:	f5 01       	movw	r30, r10
     bc4:	00 e0       	ldi	r16, 0x00	; 0
     bc6:	10 e0       	ldi	r17, 0x00	; 0
     bc8:	0a c0       	rjmp	.+20     	; 0xbde <main+0x6ae>
    if (bga[j].ypos == yc)
    {
    if (bga[j].xpos == 1)
    {
    bga[j].color = 0;
    stop++;
     bca:	36 96       	adiw	r30, 0x06	; 6
   
    
    
    
    j = 0;
while (j < NumBadGuys)
     bcc:	cb 53       	subi	r28, 0x3B	; 59
     bce:	de 4f       	sbci	r29, 0xFE	; 254
     bd0:	28 81       	ld	r18, Y
     bd2:	39 81       	ldd	r19, Y+1	; 0x01
     bd4:	c5 5c       	subi	r28, 0xC5	; 197
     bd6:	d1 40       	sbci	r29, 0x01	; 1
     bd8:	2e 17       	cp	r18, r30
     bda:	3f 07       	cpc	r19, r31
     bdc:	91 f0       	breq	.+36     	; 0xc02 <main+0x6d2>
{
    

    if (bga[j].color ==1)
     bde:	84 81       	ldd	r24, Z+4	; 0x04
     be0:	95 81       	ldd	r25, Z+5	; 0x05
     be2:	01 97       	sbiw	r24, 0x01	; 1
     be4:	91 f7       	brne	.-28     	; 0xbca <main+0x69a>
    {
    if (bga[j].ypos == yc)
     be6:	82 81       	ldd	r24, Z+2	; 0x02
     be8:	93 81       	ldd	r25, Z+3	; 0x03
     bea:	86 15       	cp	r24, r6
     bec:	97 05       	cpc	r25, r7
     bee:	69 f7       	brne	.-38     	; 0xbca <main+0x69a>
    {
    if (bga[j].xpos == 1)
     bf0:	80 81       	ld	r24, Z
     bf2:	91 81       	ldd	r25, Z+1	; 0x01
     bf4:	01 97       	sbiw	r24, 0x01	; 1
     bf6:	49 f7       	brne	.-46     	; 0xbca <main+0x69a>
    {
    bga[j].color = 0;
     bf8:	15 82       	std	Z+5, r1	; 0x05
     bfa:	14 82       	std	Z+4, r1	; 0x04
    stop++;
     bfc:	0f 5f       	subi	r16, 0xFF	; 255
     bfe:	1f 4f       	sbci	r17, 0xFF	; 255
     c00:	e4 cf       	rjmp	.-56     	; 0xbca <main+0x69a>
    j++;
}

    }

if (stop == 0)    
     c02:	01 15       	cp	r16, r1
     c04:	11 05       	cpc	r17, r1
     c06:	09 f4       	brne	.+2      	; 0xc0a <main+0x6da>
     c08:	4a c3       	rjmp	.+1684   	; 0x129e <main+0xd6e>
    }
    j++;
}
}

if (stop == 0)    
     c0a:	01 15       	cp	r16, r1
     c0c:	11 05       	cpc	r17, r1
     c0e:	09 f4       	brne	.+2      	; 0xc12 <main+0x6e2>
     c10:	73 c3       	rjmp	.+1766   	; 0x12f8 <main+0xdc8>

if (buttons & 64) // fire
{


buttons &= ~(64);
     c12:	2f eb       	ldi	r18, 0xBF	; 191
     c14:	3f ef       	ldi	r19, 0xFF	; 255
     c16:	82 22       	and	r8, r18
     c18:	93 22       	and	r9, r19
  
    
    
    
stop = 0;
display();
     c1a:	4e da       	rcall	.-2916   	; 0xb8 <display>
//  then DELETE HIM
 
     
}

if (buttons & 128)   // Bomb
     c1c:	87 fe       	sbrs	r8, 7
     c1e:	b1 c0       	rjmp	.+354    	; 0xd82 <main+0x852>
   {
   if (bulletcount > 0)
     c20:	c1 54       	subi	r28, 0x41	; 65
     c22:	de 4f       	sbci	r29, 0xFE	; 254
     c24:	88 81       	ld	r24, Y
     c26:	99 81       	ldd	r25, Y+1	; 0x01
     c28:	cf 5b       	subi	r28, 0xBF	; 191
     c2a:	d1 40       	sbci	r29, 0x01	; 1
     c2c:	89 2b       	or	r24, r25
     c2e:	09 f4       	brne	.+2      	; 0xc32 <main+0x702>
     c30:	a4 c0       	rjmp	.+328    	; 0xd7a <main+0x84a>
     c32:	fe 01       	movw	r30, r28
     c34:	31 96       	adiw	r30, 0x01	; 1
  {
  j = 0;
while (j < NumBadGuys)
    {

	if (bga[j].xpos < 7)
     c36:	80 81       	ld	r24, Z
     c38:	91 81       	ldd	r25, Z+1	; 0x01
     c3a:	07 97       	sbiw	r24, 0x07	; 7
     c3c:	10 f4       	brcc	.+4      	; 0xc42 <main+0x712>
	    bga[j].color = 0;
     c3e:	15 82       	std	Z+5, r1	; 0x05
     c40:	14 82       	std	Z+4, r1	; 0x04
     c42:	36 96       	adiw	r30, 0x06	; 6
if (buttons & 128)   // Bomb
   {
   if (bulletcount > 0)
  {
  j = 0;
while (j < NumBadGuys)
     c44:	cb 53       	subi	r28, 0x3B	; 59
     c46:	de 4f       	sbci	r29, 0xFE	; 254
     c48:	28 81       	ld	r18, Y
     c4a:	39 81       	ldd	r19, Y+1	; 0x01
     c4c:	c5 5c       	subi	r28, 0xC5	; 197
     c4e:	d1 40       	sbci	r29, 0x01	; 1
     c50:	2e 17       	cp	r18, r30
     c52:	3f 07       	cpc	r19, r31
     c54:	81 f7       	brne	.-32     	; 0xc36 <main+0x706>

		
	
	j++;
    }
bomb();
     c56:	0d db       	rcall	.-2534   	; 0x272 <bomb>
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	90 e0       	ldi	r25, 0x00	; 0
}


   if (firenote == 6) // f# / gb
{
ICR1 = 10810;	
     c5c:	6a e3       	ldi	r22, 0x3A	; 58
     c5e:	7a e2       	ldi	r23, 0x2A	; 42
OCR1A = 5405;
     c60:	ed e1       	ldi	r30, 0x1D	; 29
     c62:	f5 e1       	ldi	r31, 0x15	; 21
OCR1A = 6069;
}

   if (firenote == 7) // f
{
ICR1 = 11461;	
     c64:	a5 ec       	ldi	r26, 0xC5	; 197
     c66:	bc e2       	ldi	r27, 0x2C	; 44
OCR1A = 5730;
     c68:	02 e6       	ldi	r16, 0x62	; 98
     c6a:	16 e1       	ldi	r17, 0x16	; 22
}    
    

   if (firenote == 8) // e
{
ICR1 = 12136;	
     c6c:	38 e6       	ldi	r19, 0x68	; 104
     c6e:	e3 2e       	mov	r14, r19
     c70:	3f e2       	ldi	r19, 0x2F	; 47
     c72:	f3 2e       	mov	r15, r19
OCR1A = 6069;
     c74:	25 eb       	ldi	r18, 0xB5	; 181
     c76:	a2 2e       	mov	r10, r18
     c78:	27 e1       	ldi	r18, 0x17	; 23
     c7a:	b2 2e       	mov	r11, r18

//Clear the badguys from the screen, then show the bomb animation.

//SOUND:
while (firenote < 13)
{firenotechange++;
     c7c:	cb 54       	subi	r28, 0x4B	; 75
     c7e:	de 4f       	sbci	r29, 0xFE	; 254
     c80:	28 81       	ld	r18, Y
     c82:	39 81       	ldd	r19, Y+1	; 0x01
     c84:	c5 5b       	subi	r28, 0xB5	; 181
     c86:	d1 40       	sbci	r29, 0x01	; 1
     c88:	2f 5f       	subi	r18, 0xFF	; 255
     c8a:	3f 4f       	sbci	r19, 0xFF	; 255
     c8c:	cb 54       	subi	r28, 0x4B	; 75
     c8e:	de 4f       	sbci	r29, 0xFE	; 254
     c90:	39 83       	std	Y+1, r19	; 0x01
     c92:	28 83       	st	Y, r18
     c94:	c5 5b       	subi	r28, 0xB5	; 181
     c96:	d1 40       	sbci	r29, 0x01	; 1
    
   if (firenotechange == 2000) //c
     c98:	20 5d       	subi	r18, 0xD0	; 208
     c9a:	37 40       	sbci	r19, 0x07	; 7
     c9c:	39 f4       	brne	.+14     	; 0xcac <main+0x77c>
{
firenote++;
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	cb 54       	subi	r28, 0x4B	; 75
     ca2:	de 4f       	sbci	r29, 0xFE	; 254
     ca4:	19 82       	std	Y+1, r1	; 0x01
     ca6:	18 82       	st	Y, r1
     ca8:	c5 5b       	subi	r28, 0xB5	; 181
     caa:	d1 40       	sbci	r29, 0x01	; 1
firenotechange = 0;
}
if (firenote == 12)    
     cac:	8c 30       	cpi	r24, 0x0C	; 12
     cae:	91 05       	cpc	r25, r1
     cb0:	69 f1       	breq	.+90     	; 0xd0c <main+0x7dc>
{
ICR1 = 15296;	
OCR1A = 7648;
}
    
    if (firenote == 11) // c# / db
     cb2:	8b 30       	cpi	r24, 0x0B	; 11
     cb4:	91 05       	cpc	r25, r1
     cb6:	09 f0       	breq	.+2      	; 0xcba <main+0x78a>
     cb8:	ee c3       	rjmp	.+2012   	; 0x1496 <main+0xf66>
{
ICR1 = 14440;	
     cba:	28 e6       	ldi	r18, 0x68	; 104
     cbc:	38 e3       	ldi	r19, 0x38	; 56
     cbe:	30 93 87 00 	sts	0x0087, r19
     cc2:	20 93 86 00 	sts	0x0086, r18
OCR1A = 7220;
     cc6:	24 e3       	ldi	r18, 0x34	; 52
     cc8:	3c e1       	ldi	r19, 0x1C	; 28
     cca:	30 93 89 00 	sts	0x0089, r19
     cce:	20 93 88 00 	sts	0x0088, r18
{
ICR1 = 12136;	
OCR1A = 6069;
}

   if (firenote == 7) // f
     cd2:	87 30       	cpi	r24, 0x07	; 7
     cd4:	91 05       	cpc	r25, r1
     cd6:	09 f0       	breq	.+2      	; 0xcda <main+0x7aa>
     cd8:	ed c3       	rjmp	.+2010   	; 0x14b4 <main+0xf84>
{
ICR1 = 11461;	
     cda:	b0 93 87 00 	sts	0x0087, r27
     cde:	a0 93 86 00 	sts	0x0086, r26
OCR1A = 5730;
     ce2:	10 93 89 00 	sts	0x0089, r17
     ce6:	00 93 88 00 	sts	0x0088, r16
{
ICR1 = 9636;	
OCR1A = 4813;
}

   if (firenote == 3) // a 
     cea:	83 30       	cpi	r24, 0x03	; 3
     cec:	91 05       	cpc	r25, r1
     cee:	09 f0       	breq	.+2      	; 0xcf2 <main+0x7c2>
     cf0:	ec c3       	rjmp	.+2008   	; 0x14ca <main+0xf9a>
{
ICR1 = 9090;	
     cf2:	22 e8       	ldi	r18, 0x82	; 130
     cf4:	33 e2       	ldi	r19, 0x23	; 35
     cf6:	30 93 87 00 	sts	0x0087, r19
     cfa:	20 93 86 00 	sts	0x0086, r18
OCR1A = 4545;
     cfe:	21 ec       	ldi	r18, 0xC1	; 193
     d00:	31 e1       	ldi	r19, 0x11	; 17
     d02:	30 93 89 00 	sts	0x0089, r19
     d06:	20 93 88 00 	sts	0x0088, r18
     d0a:	b8 cf       	rjmp	.-144    	; 0xc7c <main+0x74c>
firenote++;
firenotechange = 0;
}
if (firenote == 12)    
{
ICR1 = 15296;	
     d0c:	20 ec       	ldi	r18, 0xC0	; 192
     d0e:	3b e3       	ldi	r19, 0x3B	; 59
     d10:	30 93 87 00 	sts	0x0087, r19
     d14:	20 93 86 00 	sts	0x0086, r18
OCR1A = 7648;
     d18:	20 ee       	ldi	r18, 0xE0	; 224
     d1a:	3d e1       	ldi	r19, 0x1D	; 29
     d1c:	30 93 89 00 	sts	0x0089, r19
     d20:	20 93 88 00 	sts	0x0088, r18
ICR1 = 12861;	
OCR1A = 6340;
}    
    

   if (firenote == 8) // e
     d24:	88 30       	cpi	r24, 0x08	; 8
     d26:	91 05       	cpc	r25, r1
     d28:	a1 f6       	brne	.-88     	; 0xcd2 <main+0x7a2>
{
ICR1 = 12136;	
     d2a:	f0 92 87 00 	sts	0x0087, r15
     d2e:	e0 92 86 00 	sts	0x0086, r14
OCR1A = 6069;
     d32:	b0 92 89 00 	sts	0x0089, r11
     d36:	a0 92 88 00 	sts	0x0088, r10
{
ICR1 = 10204;	
OCR1A = 5102;
}

   if (firenote == 4) // g# / ab
     d3a:	84 30       	cpi	r24, 0x04	; 4
     d3c:	91 05       	cpc	r25, r1
     d3e:	a9 f6       	brne	.-86     	; 0xcea <main+0x7ba>
{
ICR1 = 9636;	
     d40:	24 ea       	ldi	r18, 0xA4	; 164
     d42:	35 e2       	ldi	r19, 0x25	; 37
     d44:	30 93 87 00 	sts	0x0087, r19
     d48:	20 93 86 00 	sts	0x0086, r18
OCR1A = 4813;
     d4c:	2d ec       	ldi	r18, 0xCD	; 205
     d4e:	32 e1       	ldi	r19, 0x12	; 18
     d50:	30 93 89 00 	sts	0x0089, r19
     d54:	20 93 88 00 	sts	0x0088, r18
bulletcount --;

//Clear the badguys from the screen, then show the bomb animation.

//SOUND:
while (firenote < 13)
     d58:	8d 30       	cpi	r24, 0x0D	; 13
     d5a:	91 05       	cpc	r25, r1
     d5c:	08 f4       	brcc	.+2      	; 0xd60 <main+0x830>
     d5e:	8e cf       	rjmp	.-228    	; 0xc7c <main+0x74c>
		
	
	j++;
    }
bomb();
bulletcount --;
     d60:	c1 54       	subi	r28, 0x41	; 65
     d62:	de 4f       	sbci	r29, 0xFE	; 254
     d64:	88 81       	ld	r24, Y
     d66:	99 81       	ldd	r25, Y+1	; 0x01
     d68:	cf 5b       	subi	r28, 0xBF	; 191
     d6a:	d1 40       	sbci	r29, 0x01	; 1
     d6c:	01 97       	sbiw	r24, 0x01	; 1
     d6e:	c1 54       	subi	r28, 0x41	; 65
     d70:	de 4f       	sbci	r29, 0xFE	; 254
     d72:	99 83       	std	Y+1, r25	; 0x01
     d74:	88 83       	st	Y, r24
     d76:	cf 5b       	subi	r28, 0xBF	; 191
     d78:	d1 40       	sbci	r29, 0x01	; 1
firenote = 0;


    }
  
buttons &= ~(128);
     d7a:	ef e7       	ldi	r30, 0x7F	; 127
     d7c:	ff ef       	ldi	r31, 0xFF	; 255
     d7e:	8e 22       	and	r8, r30
     d80:	9f 22       	and	r9, r31
     d82:	e9 80       	ldd	r14, Y+1	; 0x01
     d84:	fa 80       	ldd	r15, Y+2	; 0x02
     d86:	de 01       	movw	r26, r28
     d88:	13 96       	adiw	r26, 0x03	; 3
     d8a:	a7 01       	movw	r20, r14

//See if you lose:
j = 0;
while (j < NumBadGuys)
    {
        drawpoint(bga[j].xpos,bga[j].ypos,bga[j].color);
     d8c:	6d 91       	ld	r22, X+
     d8e:	7c 91       	ld	r23, X
     d90:	11 97       	sbiw	r26, 0x01	; 1
     d92:	12 96       	adiw	r26, 0x02	; 2
     d94:	1c 91       	ld	r17, X
     d96:	12 97       	sbiw	r26, 0x02	; 2
void drawpoint(unsigned short xin, unsigned short yin, unsigned short color)
{

// for color input 0 = dark, 1 = red, 2 = green, 3 = orange    

if (color & 1)
     d98:	10 ff       	sbrs	r17, 0
     d9a:	13 c0       	rjmp	.+38     	; 0xdc2 <main+0x892>
{// red
    redMatrix[yin] |= 64 >> xin;
     d9c:	fb 01       	movw	r30, r22
     d9e:	ee 0f       	add	r30, r30
     da0:	ff 1f       	adc	r31, r31
     da2:	e2 5f       	subi	r30, 0xF2	; 242
     da4:	fe 4f       	sbci	r31, 0xFE	; 254
     da6:	80 e4       	ldi	r24, 0x40	; 64
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	04 2e       	mov	r0, r20
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <main+0x882>
     dae:	95 95       	asr	r25
     db0:	87 95       	ror	r24
     db2:	0a 94       	dec	r0
     db4:	e2 f7       	brpl	.-8      	; 0xdae <main+0x87e>
     db6:	20 81       	ld	r18, Z
     db8:	31 81       	ldd	r19, Z+1	; 0x01
     dba:	82 2b       	or	r24, r18
     dbc:	93 2b       	or	r25, r19
     dbe:	91 83       	std	Z+1, r25	; 0x01
     dc0:	80 83       	st	Z, r24
}
    
if (color & 2)
     dc2:	11 ff       	sbrs	r17, 1
     dc4:	12 c0       	rjmp	.+36     	; 0xdea <main+0x8ba>
{// green
grnMatrix[yin] |= 64 >> xin;
     dc6:	fb 01       	movw	r30, r22
     dc8:	ee 0f       	add	r30, r30
     dca:	ff 1f       	adc	r31, r31
     dcc:	ec 5f       	subi	r30, 0xFC	; 252
     dce:	fe 4f       	sbci	r31, 0xFE	; 254
     dd0:	80 e4       	ldi	r24, 0x40	; 64
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <main+0x8aa>
     dd6:	95 95       	asr	r25
     dd8:	87 95       	ror	r24
     dda:	4a 95       	dec	r20
     ddc:	e2 f7       	brpl	.-8      	; 0xdd6 <main+0x8a6>
     dde:	20 81       	ld	r18, Z
     de0:	31 81       	ldd	r19, Z+1	; 0x01
     de2:	82 2b       	or	r24, r18
     de4:	93 2b       	or	r25, r19
     de6:	91 83       	std	Z+1, r25	; 0x01
     de8:	80 83       	st	Z, r24
    {
        drawpoint(bga[j].xpos,bga[j].ypos,bga[j].color);
	j++;

    
	if (bga[j].xpos == xc)
     dea:	14 96       	adiw	r26, 0x04	; 4
     dec:	4d 91       	ld	r20, X+
     dee:	5c 91       	ld	r21, X
     df0:	15 97       	sbiw	r26, 0x05	; 5
     df2:	41 15       	cp	r20, r1
     df4:	51 05       	cpc	r21, r1
     df6:	71 f0       	breq	.+28     	; 0xe14 <main+0x8e4>
if (buttons & 64) // fire button triggers restart
{
loser++;

j = 0;
while (j < NumBadGuys)
     df8:	16 96       	adiw	r26, 0x06	; 6
   


//See if you lose:
j = 0;
while (j < NumBadGuys)
     dfa:	c9 53       	subi	r28, 0x39	; 57
     dfc:	de 4f       	sbci	r29, 0xFE	; 254
     dfe:	e8 81       	ld	r30, Y
     e00:	f9 81       	ldd	r31, Y+1	; 0x01
     e02:	c7 5c       	subi	r28, 0xC7	; 199
     e04:	d1 40       	sbci	r29, 0x01	; 1
     e06:	ae 17       	cp	r26, r30
     e08:	bf 07       	cpc	r27, r31
     e0a:	09 f0       	breq	.+2      	; 0xe0e <main+0x8de>
     e0c:	bf cf       	rjmp	.-130    	; 0xd8c <main+0x85c>
     e0e:	ee 24       	eor	r14, r14
     e10:	ff 24       	eor	r15, r15
     e12:	b3 cd       	rjmp	.-1178   	; 0x97a <main+0x44a>

    
	if (bga[j].xpos == xc)
	{

	if (bga[j].color == 1)
     e14:	18 96       	adiw	r26, 0x08	; 8
     e16:	8d 91       	ld	r24, X+
     e18:	9c 91       	ld	r25, X
     e1a:	19 97       	sbiw	r26, 0x09	; 9
     e1c:	01 97       	sbiw	r24, 0x01	; 1
     e1e:	61 f7       	brne	.-40     	; 0xdf8 <main+0x8c8>
        {
    
while (loser < 300)
     e20:	fc e2       	ldi	r31, 0x2C	; 44
     e22:	4f 16       	cp	r4, r31
     e24:	f1 e0       	ldi	r31, 0x01	; 1
     e26:	5f 06       	cpc	r5, r31
     e28:	88 f5       	brcc	.+98     	; 0xe8c <main+0x95c>
}


void lose(void) // 'you lose' display
{
redMatrix[0] = 127;
     e2a:	d0 92 0f 01 	sts	0x010F, r13
     e2e:	c0 92 0e 01 	sts	0x010E, r12
redMatrix[1] = 127;
     e32:	d0 92 11 01 	sts	0x0111, r13
     e36:	c0 92 10 01 	sts	0x0110, r12
redMatrix[2] = 127;
     e3a:	d0 92 13 01 	sts	0x0113, r13
     e3e:	c0 92 12 01 	sts	0x0112, r12
redMatrix[3] = 127;
     e42:	d0 92 15 01 	sts	0x0115, r13
     e46:	c0 92 14 01 	sts	0x0114, r12
redMatrix[4] = 127;
     e4a:	d0 92 17 01 	sts	0x0117, r13
     e4e:	c0 92 16 01 	sts	0x0116, r12
grnMatrix[0] = 127;
     e52:	d0 92 05 01 	sts	0x0105, r13
     e56:	c0 92 04 01 	sts	0x0104, r12
grnMatrix[1] = 127;
     e5a:	d0 92 07 01 	sts	0x0107, r13
     e5e:	c0 92 06 01 	sts	0x0106, r12
grnMatrix[2] = 127;
     e62:	d0 92 09 01 	sts	0x0109, r13
     e66:	c0 92 08 01 	sts	0x0108, r12
grnMatrix[3] = 127;
     e6a:	d0 92 0b 01 	sts	0x010B, r13
     e6e:	c0 92 0a 01 	sts	0x010A, r12
grnMatrix[4] = 127;
     e72:	d0 92 0d 01 	sts	0x010D, r13
     e76:	c0 92 0c 01 	sts	0x010C, r12
        {
    
while (loser < 300)
{
    lose();
    display();
     e7a:	1e d9       	rcall	.-3524   	; 0xb8 <display>
    
    loser++;
     e7c:	08 94       	sec
     e7e:	41 1c       	adc	r4, r1
     e80:	51 1c       	adc	r5, r1
	{

	if (bga[j].color == 1)
        {
    
while (loser < 300)
     e82:	2c e2       	ldi	r18, 0x2C	; 44
     e84:	42 16       	cp	r4, r18
     e86:	21 e0       	ldi	r18, 0x01	; 1
     e88:	52 06       	cpc	r5, r18
     e8a:	78 f2       	brcs	.-98     	; 0xe2a <main+0x8fa>
    
    loser++;
}
loser = 0;

while (loser < 650)
     e8c:	20 e0       	ldi	r18, 0x00	; 0
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     e94:	00 00       	nop
			delayvar++;
     e96:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     e98:	89 3c       	cpi	r24, 0xC9	; 201
     e9a:	91 05       	cpc	r25, r1
     e9c:	d9 f7       	brne	.-10     	; 0xe94 <main+0x964>

while (loser < 650)
{
    delayShort();
    
    loser++;
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
    
    loser++;
}
loser = 0;

while (loser < 650)
     ea2:	42 e0       	ldi	r20, 0x02	; 2
     ea4:	2a 38       	cpi	r18, 0x8A	; 138
     ea6:	34 07       	cpc	r19, r20
     ea8:	99 f7       	brne	.-26     	; 0xe90 <main+0x960>
     eaa:	00 e0       	ldi	r16, 0x00	; 0
     eac:	10 e0       	ldi	r17, 0x00	; 0
}


void lose(void) // 'you lose' display
{
redMatrix[0] = 127;
     eae:	d0 92 0f 01 	sts	0x010F, r13
     eb2:	c0 92 0e 01 	sts	0x010E, r12
redMatrix[1] = 127;
     eb6:	d0 92 11 01 	sts	0x0111, r13
     eba:	c0 92 10 01 	sts	0x0110, r12
redMatrix[2] = 127;
     ebe:	d0 92 13 01 	sts	0x0113, r13
     ec2:	c0 92 12 01 	sts	0x0112, r12
redMatrix[3] = 127;
     ec6:	d0 92 15 01 	sts	0x0115, r13
     eca:	c0 92 14 01 	sts	0x0114, r12
redMatrix[4] = 127;
     ece:	d0 92 17 01 	sts	0x0117, r13
     ed2:	c0 92 16 01 	sts	0x0116, r12
grnMatrix[0] = 127;
     ed6:	d0 92 05 01 	sts	0x0105, r13
     eda:	c0 92 04 01 	sts	0x0104, r12
grnMatrix[1] = 127;
     ede:	d0 92 07 01 	sts	0x0107, r13
     ee2:	c0 92 06 01 	sts	0x0106, r12
grnMatrix[2] = 127;
     ee6:	d0 92 09 01 	sts	0x0109, r13
     eea:	c0 92 08 01 	sts	0x0108, r12
grnMatrix[3] = 127;
     eee:	d0 92 0b 01 	sts	0x010B, r13
     ef2:	c0 92 0a 01 	sts	0x010A, r12
grnMatrix[4] = 127;
     ef6:	d0 92 0d 01 	sts	0x010D, r13
     efa:	c0 92 0c 01 	sts	0x010C, r12
loser = 0;

while (loser <300)
{
    lose();
    display();
     efe:	dc d8       	rcall	.-3656   	; 0xb8 <display>
    
    loser++;
     f00:	0f 5f       	subi	r16, 0xFF	; 255
     f02:	1f 4f       	sbci	r17, 0xFF	; 255
    
    loser++;
}
loser = 0;

while (loser <300)
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	0c 32       	cpi	r16, 0x2C	; 44
     f08:	18 07       	cpc	r17, r24
     f0a:	89 f6       	brne	.-94     	; 0xeae <main+0x97e>
     f0c:	20 e0       	ldi	r18, 0x00	; 0
     f0e:	30 e0       	ldi	r19, 0x00	; 0
    
    loser++;
}
loser = 0;

while (loser < 650)
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     f14:	00 00       	nop
			delayvar++;
     f16:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     f18:	89 3c       	cpi	r24, 0xC9	; 201
     f1a:	91 05       	cpc	r25, r1
     f1c:	d9 f7       	brne	.-10     	; 0xf14 <main+0x9e4>
loser = 0;

while (loser < 650)
{
    delayShort();
    loser++;
     f1e:	2f 5f       	subi	r18, 0xFF	; 255
     f20:	3f 4f       	sbci	r19, 0xFF	; 255
    
    loser++;
}
loser = 0;

while (loser < 650)
     f22:	92 e0       	ldi	r25, 0x02	; 2
     f24:	2a 38       	cpi	r18, 0x8A	; 138
     f26:	39 07       	cpc	r19, r25
     f28:	99 f7       	brne	.-26     	; 0xf10 <main+0x9e0>
     f2a:	00 e0       	ldi	r16, 0x00	; 0
     f2c:	10 e0       	ldi	r17, 0x00	; 0
}


void lose(void) // 'you lose' display
{
redMatrix[0] = 127;
     f2e:	d0 92 0f 01 	sts	0x010F, r13
     f32:	c0 92 0e 01 	sts	0x010E, r12
redMatrix[1] = 127;
     f36:	d0 92 11 01 	sts	0x0111, r13
     f3a:	c0 92 10 01 	sts	0x0110, r12
redMatrix[2] = 127;
     f3e:	d0 92 13 01 	sts	0x0113, r13
     f42:	c0 92 12 01 	sts	0x0112, r12
redMatrix[3] = 127;
     f46:	d0 92 15 01 	sts	0x0115, r13
     f4a:	c0 92 14 01 	sts	0x0114, r12
redMatrix[4] = 127;
     f4e:	d0 92 17 01 	sts	0x0117, r13
     f52:	c0 92 16 01 	sts	0x0116, r12
grnMatrix[0] = 127;
     f56:	d0 92 05 01 	sts	0x0105, r13
     f5a:	c0 92 04 01 	sts	0x0104, r12
grnMatrix[1] = 127;
     f5e:	d0 92 07 01 	sts	0x0107, r13
     f62:	c0 92 06 01 	sts	0x0106, r12
grnMatrix[2] = 127;
     f66:	d0 92 09 01 	sts	0x0109, r13
     f6a:	c0 92 08 01 	sts	0x0108, r12
grnMatrix[3] = 127;
     f6e:	d0 92 0b 01 	sts	0x010B, r13
     f72:	c0 92 0a 01 	sts	0x010A, r12
grnMatrix[4] = 127;
     f76:	d0 92 0d 01 	sts	0x010D, r13
     f7a:	c0 92 0c 01 	sts	0x010C, r12
loser = 0;

while (loser <300)
{
    lose();
    display();
     f7e:	9c d8       	rcall	.-3784   	; 0xb8 <display>
    
    loser++;
     f80:	0f 5f       	subi	r16, 0xFF	; 255
     f82:	1f 4f       	sbci	r17, 0xFF	; 255
    delayShort();
    loser++;
}
loser = 0;

while (loser <300)
     f84:	e1 e0       	ldi	r30, 0x01	; 1
     f86:	0c 32       	cpi	r16, 0x2C	; 44
     f88:	1e 07       	cpc	r17, r30
     f8a:	89 f6       	brne	.-94     	; 0xf2e <main+0x9fe>
     f8c:	20 e0       	ldi	r18, 0x00	; 0
     f8e:	30 e0       	ldi	r19, 0x00	; 0
    
    loser++;
}
loser = 0;

while (loser < 650)
     f90:	80 e0       	ldi	r24, 0x00	; 0
     f92:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
		{ 
			asm("nop");  
     f94:	00 00       	nop
			delayvar++;
     f96:	01 96       	adiw	r24, 0x01	; 1

void delayShort(void)
{
unsigned int delayvar;
	delayvar = 0; 
	while (delayvar <=  200U)		
     f98:	89 3c       	cpi	r24, 0xC9	; 201
     f9a:	91 05       	cpc	r25, r1
     f9c:	d9 f7       	brne	.-10     	; 0xf94 <main+0xa64>
loser = 0;

while (loser < 650)
{
    delayShort();
    loser++;
     f9e:	2f 5f       	subi	r18, 0xFF	; 255
     fa0:	3f 4f       	sbci	r19, 0xFF	; 255
    
    loser++;
}
loser = 0;

while (loser < 650)
     fa2:	f2 e0       	ldi	r31, 0x02	; 2
     fa4:	2a 38       	cpi	r18, 0x8A	; 138
     fa6:	3f 07       	cpc	r19, r31
     fa8:	99 f7       	brne	.-26     	; 0xf90 <main+0xa60>
{
    delayShort();
    loser++;
}
ICR1 = 0;	
     faa:	10 92 87 00 	sts	0x0087, r1
     fae:	10 92 86 00 	sts	0x0086, r1
OCR1A = 0;
     fb2:	10 92 89 00 	sts	0x0089, r1
     fb6:	10 92 88 00 	sts	0x0088, r1
loser = 0;
while (loser < 1)
{asm("nop");
     fba:	00 00       	nop

if ((PINC & 1) == 0) // se, switch 3
     fbc:	30 99       	sbic	0x06, 0	; 6
     fbe:	33 c0       	rjmp	.+102    	; 0x1026 <main+0xaf6>
     buttons |= 4;// set bit 3
     fc0:	24 e0       	ldi	r18, 0x04	; 4
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	82 2a       	or	r8, r18
     fc6:	93 2a       	or	r9, r19
if (buttons & 4)
    buttons |= 64;// set bit 7
buttons &= ~(4);// clear bit 3
    }    
    
if (buttons & 64) // fire button triggers restart
     fc8:	86 fe       	sbrs	r8, 6
     fca:	f7 cf       	rjmp	.-18     	; 0xfba <main+0xa8a>
     fcc:	fe 01       	movw	r30, r28
     fce:	31 96       	adiw	r30, 0x01	; 1
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <main+0xaa6>
{
loser++;

j = 0;
while (j < NumBadGuys)
     fd2:	e0 80       	ld	r14, Z
     fd4:	f1 80       	ldd	r15, Z+1	; 0x01
{

    
    

bga[j].xpos += waiter3;
     fd6:	e2 0c       	add	r14, r2
     fd8:	f3 1c       	adc	r15, r3
     fda:	f1 82       	std	Z+1, r15	; 0x01
     fdc:	e0 82       	st	Z, r14

bga[j].color = 1;
     fde:	21 e0       	ldi	r18, 0x01	; 1
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	35 83       	std	Z+5, r19	; 0x05
     fe4:	24 83       	std	Z+4, r18	; 0x04
     fe6:	36 96       	adiw	r30, 0x06	; 6
if (buttons & 64) // fire button triggers restart
{
loser++;

j = 0;
while (j < NumBadGuys)
     fe8:	cb 53       	subi	r28, 0x3B	; 59
     fea:	de 4f       	sbci	r29, 0xFE	; 254
     fec:	88 81       	ld	r24, Y
     fee:	99 81       	ldd	r25, Y+1	; 0x01
     ff0:	c5 5c       	subi	r28, 0xC5	; 197
     ff2:	d1 40       	sbci	r29, 0x01	; 1
     ff4:	8e 17       	cp	r24, r30
     ff6:	9f 07       	cpc	r25, r31
     ff8:	61 f7       	brne	.-40     	; 0xfd2 <main+0xaa2>
     ffa:	66 24       	eor	r6, r6
     ffc:	77 24       	eor	r7, r7
     ffe:	ee 24       	eor	r14, r14
    1000:	ff 24       	eor	r15, r15
    1002:	22 24       	eor	r2, r2
    1004:	33 24       	eor	r3, r3
    1006:	c1 54       	subi	r28, 0x41	; 65
    1008:	de 4f       	sbci	r29, 0xFE	; 254
    100a:	39 83       	std	Y+1, r19	; 0x01
    100c:	28 83       	st	Y, r18
    100e:	cf 5b       	subi	r28, 0xBF	; 191
    1010:	d1 40       	sbci	r29, 0x01	; 1
    1012:	71 e0       	ldi	r23, 0x01	; 1
    1014:	47 2e       	mov	r4, r23
    1016:	51 2c       	mov	r5, r1
    1018:	c7 54       	subi	r28, 0x47	; 71
    101a:	de 4f       	sbci	r29, 0xFE	; 254
    101c:	19 82       	std	Y+1, r1	; 0x01
    101e:	18 82       	st	Y, r1
    1020:	c9 5b       	subi	r28, 0xB9	; 185
    1022:	d1 40       	sbci	r29, 0x01	; 1
    1024:	aa cc       	rjmp	.-1708   	; 0x97a <main+0x44a>
if ((PINC & 1) == 0) // se, switch 3
     buttons |= 4;// set bit 3
else
{

if (buttons & 4)
    1026:	82 fe       	sbrs	r8, 2
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <main+0xb02>
    buttons |= 64;// set bit 7
    102a:	80 e4       	ldi	r24, 0x40	; 64
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	88 2a       	or	r8, r24
    1030:	99 2a       	or	r9, r25
buttons &= ~(4);// clear bit 3
    1032:	eb ef       	ldi	r30, 0xFB	; 251
    1034:	ff ef       	ldi	r31, 0xFF	; 255
    1036:	8e 22       	and	r8, r30
    1038:	9f 22       	and	r9, r31
    103a:	c6 cf       	rjmp	.-116    	; 0xfc8 <main+0xa98>
note++;
notechange = 0;
}
if (note == 1)    
{
ICR1 = 15296;	
    103c:	80 ec       	ldi	r24, 0xC0	; 192
    103e:	9b e3       	ldi	r25, 0x3B	; 59
    1040:	90 93 87 00 	sts	0x0087, r25
    1044:	80 93 86 00 	sts	0x0086, r24
OCR1A = 7648;
    1048:	80 ee       	ldi	r24, 0xE0	; 224
    104a:	9d e1       	ldi	r25, 0x1D	; 29
    104c:	90 93 89 00 	sts	0x0089, r25
    1050:	80 93 88 00 	sts	0x0088, r24
ICR1 = 12861;	
OCR1A = 6340;
}    
    

   if (note == 5) // E
    1054:	c9 54       	subi	r28, 0x49	; 73
    1056:	de 4f       	sbci	r29, 0xFE	; 254
    1058:	e8 81       	ld	r30, Y
    105a:	f9 81       	ldd	r31, Y+1	; 0x01
    105c:	c7 5b       	subi	r28, 0xB7	; 183
    105e:	d1 40       	sbci	r29, 0x01	; 1
    1060:	35 97       	sbiw	r30, 0x05	; 5
    1062:	09 f0       	breq	.+2      	; 0x1066 <main+0xb36>
    1064:	36 cc       	rjmp	.-1940   	; 0x8d2 <main+0x3a2>
{
ICR1 = 12136;	
    1066:	88 e6       	ldi	r24, 0x68	; 104
    1068:	9f e2       	ldi	r25, 0x2F	; 47
    106a:	90 93 87 00 	sts	0x0087, r25
    106e:	80 93 86 00 	sts	0x0086, r24
OCR1A = 6069;
    1072:	85 eb       	ldi	r24, 0xB5	; 181
    1074:	97 e1       	ldi	r25, 0x17	; 23
    1076:	90 93 89 00 	sts	0x0089, r25
    107a:	80 93 88 00 	sts	0x0088, r24
{
ICR1 = 10204;	
OCR1A = 5102;
}

   if (note == 9) // G# / Ab
    107e:	c9 54       	subi	r28, 0x49	; 73
    1080:	de 4f       	sbci	r29, 0xFE	; 254
    1082:	28 81       	ld	r18, Y
    1084:	39 81       	ldd	r19, Y+1	; 0x01
    1086:	c7 5b       	subi	r28, 0xB7	; 183
    1088:	d1 40       	sbci	r29, 0x01	; 1
    108a:	29 30       	cpi	r18, 0x09	; 9
    108c:	31 05       	cpc	r19, r1
    108e:	09 f0       	breq	.+2      	; 0x1092 <main+0xb62>
    1090:	36 cc       	rjmp	.-1940   	; 0x8fe <main+0x3ce>
{
ICR1 = 9636;	
    1092:	84 ea       	ldi	r24, 0xA4	; 164
    1094:	95 e2       	ldi	r25, 0x25	; 37
    1096:	90 93 87 00 	sts	0x0087, r25
    109a:	80 93 86 00 	sts	0x0086, r24
OCR1A = 4813;
    109e:	ed ec       	ldi	r30, 0xCD	; 205
    10a0:	f2 e1       	ldi	r31, 0x12	; 18
    10a2:	f0 93 89 00 	sts	0x0089, r31
    10a6:	e0 93 88 00 	sts	0x0088, r30
{
ICR1 = 8097;	
OCR1A = 4048;
}

if (note == 13) // reset
    10aa:	c9 54       	subi	r28, 0x49	; 73
    10ac:	de 4f       	sbci	r29, 0xFE	; 254
    10ae:	28 81       	ld	r18, Y
    10b0:	39 81       	ldd	r19, Y+1	; 0x01
    10b2:	c7 5b       	subi	r28, 0xB7	; 183
    10b4:	d1 40       	sbci	r29, 0x01	; 1
    10b6:	2d 30       	cpi	r18, 0x0D	; 13
    10b8:	31 05       	cpc	r19, r1
    10ba:	09 f0       	breq	.+2      	; 0x10be <main+0xb8e>
    10bc:	36 cc       	rjmp	.-1940   	; 0x92a <main+0x3fa>
    10be:	c9 54       	subi	r28, 0x49	; 73
    10c0:	de 4f       	sbci	r29, 0xFE	; 254
    10c2:	19 82       	std	Y+1, r1	; 0x01
    10c4:	18 82       	st	Y, r1
    10c6:	c7 5b       	subi	r28, 0xB7	; 183
    10c8:	d1 40       	sbci	r29, 0x01	; 1
    10ca:	2f cc       	rjmp	.-1954   	; 0x92a <main+0x3fa>
        
    waiter++;
    waiter2++;
    rcount++;
    
if (rcount == 50)
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
{
unsigned short i=0;

while (i < 5) {
    
redMatrix[i] = 0;
    10d0:	fc 01       	movw	r30, r24
    10d2:	e2 5f       	subi	r30, 0xF2	; 242
    10d4:	fe 4f       	sbci	r31, 0xFE	; 254
    10d6:	11 82       	std	Z+1, r1	; 0x01
    10d8:	10 82       	st	Z, r1
grnMatrix[i] = 0;
    10da:	fc 01       	movw	r30, r24
    10dc:	ec 5f       	subi	r30, 0xFC	; 252
    10de:	fe 4f       	sbci	r31, 0xFE	; 254
    10e0:	11 82       	std	Z+1, r1	; 0x01
    10e2:	10 82       	st	Z, r1
    10e4:	02 96       	adiw	r24, 0x02	; 2

void eraseall(void)
{
unsigned short i=0;

while (i < 5) {
    10e6:	8a 30       	cpi	r24, 0x0A	; 10
    10e8:	91 05       	cpc	r25, r1
    10ea:	91 f7       	brne	.-28     	; 0x10d0 <main+0xba0>
    10ec:	de 01       	movw	r26, r28
    10ee:	11 96       	adiw	r26, 0x01	; 1
rcount = 0;

j = 0;
while (j < NumBadGuys)
{
            drawpoint(bga[j].xpos,bga[j].ypos,bga[j].color);
    10f0:	7c 91       	ld	r23, X
    10f2:	12 96       	adiw	r26, 0x02	; 2
    10f4:	4d 91       	ld	r20, X+
    10f6:	5c 91       	ld	r21, X
    10f8:	13 97       	sbiw	r26, 0x03	; 3
    10fa:	14 96       	adiw	r26, 0x04	; 4
    10fc:	6c 91       	ld	r22, X
    10fe:	14 97       	sbiw	r26, 0x04	; 4
void drawpoint(unsigned short xin, unsigned short yin, unsigned short color)
{

// for color input 0 = dark, 1 = red, 2 = green, 3 = orange    

if (color & 1)
    1100:	60 ff       	sbrs	r22, 0
    1102:	13 c0       	rjmp	.+38     	; 0x112a <main+0xbfa>
{// red
    redMatrix[yin] |= 64 >> xin;
    1104:	fa 01       	movw	r30, r20
    1106:	ee 0f       	add	r30, r30
    1108:	ff 1f       	adc	r31, r31
    110a:	e2 5f       	subi	r30, 0xF2	; 242
    110c:	fe 4f       	sbci	r31, 0xFE	; 254
    110e:	80 e4       	ldi	r24, 0x40	; 64
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	07 2e       	mov	r0, r23
    1114:	02 c0       	rjmp	.+4      	; 0x111a <main+0xbea>
    1116:	95 95       	asr	r25
    1118:	87 95       	ror	r24
    111a:	0a 94       	dec	r0
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <main+0xbe6>
    111e:	20 81       	ld	r18, Z
    1120:	31 81       	ldd	r19, Z+1	; 0x01
    1122:	82 2b       	or	r24, r18
    1124:	93 2b       	or	r25, r19
    1126:	91 83       	std	Z+1, r25	; 0x01
    1128:	80 83       	st	Z, r24
}
    
if (color & 2)
    112a:	61 ff       	sbrs	r22, 1
    112c:	12 c0       	rjmp	.+36     	; 0x1152 <main+0xc22>
{// green
grnMatrix[yin] |= 64 >> xin;
    112e:	fa 01       	movw	r30, r20
    1130:	ee 0f       	add	r30, r30
    1132:	ff 1f       	adc	r31, r31
    1134:	ec 5f       	subi	r30, 0xFC	; 252
    1136:	fe 4f       	sbci	r31, 0xFE	; 254
    1138:	80 e4       	ldi	r24, 0x40	; 64
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	02 c0       	rjmp	.+4      	; 0x1142 <main+0xc12>
    113e:	95 95       	asr	r25
    1140:	87 95       	ror	r24
    1142:	7a 95       	dec	r23
    1144:	e2 f7       	brpl	.-8      	; 0x113e <main+0xc0e>
    1146:	20 81       	ld	r18, Z
    1148:	31 81       	ldd	r19, Z+1	; 0x01
    114a:	82 2b       	or	r24, r18
    114c:	93 2b       	or	r25, r19
    114e:	91 83       	std	Z+1, r25	; 0x01
    1150:	80 83       	st	Z, r24
    1152:	16 96       	adiw	r26, 0x06	; 6
{
eraseall();
rcount = 0;

j = 0;
while (j < NumBadGuys)
    1154:	cb 55       	subi	r28, 0x5B	; 91
    1156:	de 4f       	sbci	r29, 0xFE	; 254
    1158:	28 81       	ld	r18, Y
    115a:	39 81       	ldd	r19, Y+1	; 0x01
    115c:	c5 5a       	subi	r28, 0xA5	; 165
    115e:	d1 40       	sbci	r29, 0x01	; 1
    1160:	2a 17       	cp	r18, r26
    1162:	3b 07       	cpc	r19, r27
    1164:	29 f6       	brne	.-118    	; 0x10f0 <main+0xbc0>
    1166:	c9 55       	subi	r28, 0x59	; 89
    1168:	de 4f       	sbci	r29, 0xFE	; 254
    116a:	19 82       	std	Y+1, r1	; 0x01
    116c:	18 82       	st	Y, r1
    116e:	c7 5a       	subi	r28, 0xA7	; 167
    1170:	d1 40       	sbci	r29, 0x01	; 1
    1172:	69 cb       	rjmp	.-2350   	; 0x846 <main+0x316>


if (zoom == 50)
{
zoom = 0;
if (yc < 4)
    1174:	34 e0       	ldi	r19, 0x04	; 4
    1176:	63 16       	cp	r6, r19
    1178:	71 04       	cpc	r7, r1
    117a:	b8 f4       	brcc	.+46     	; 0x11aa <main+0xc7a>
    yc++;
    117c:	08 94       	sec
    117e:	61 1c       	adc	r6, r1
    1180:	71 1c       	adc	r7, r1
    1182:	c5 55       	subi	r28, 0x55	; 85
    1184:	de 4f       	sbci	r29, 0xFE	; 254
    1186:	19 82       	std	Y+1, r1	; 0x01
    1188:	18 82       	st	Y, r1
    118a:	cb 5a       	subi	r28, 0xAB	; 171
    118c:	d1 40       	sbci	r29, 0x01	; 1
    118e:	3b cb       	rjmp	.-2442   	; 0x806 <main+0x2d6>
zoom ++;
}    

if (zoomup == 50)
{
if (yc > 0)
    1190:	61 14       	cp	r6, r1
    1192:	71 04       	cpc	r7, r1
    1194:	19 f0       	breq	.+6      	; 0x119c <main+0xc6c>
    yc--;
    1196:	08 94       	sec
    1198:	61 08       	sbc	r6, r1
    119a:	71 08       	sbc	r7, r1
    119c:	c7 55       	subi	r28, 0x57	; 87
    119e:	de 4f       	sbci	r29, 0xFE	; 254
    11a0:	19 82       	std	Y+1, r1	; 0x01
    11a2:	18 82       	st	Y, r1
    11a4:	c9 5a       	subi	r28, 0xA9	; 169
    11a6:	d1 40       	sbci	r29, 0x01	; 1
    11a8:	24 cb       	rjmp	.-2488   	; 0x7f2 <main+0x2c2>


if (zoom == 50)
{
zoom = 0;
if (yc < 4)
    11aa:	c5 55       	subi	r28, 0x55	; 85
    11ac:	de 4f       	sbci	r29, 0xFE	; 254
    11ae:	19 82       	std	Y+1, r1	; 0x01
    11b0:	18 82       	st	Y, r1
    11b2:	cb 5a       	subi	r28, 0xAB	; 171
    11b4:	d1 40       	sbci	r29, 0x01	; 1
    11b6:	84 e0       	ldi	r24, 0x04	; 4
    11b8:	68 2e       	mov	r6, r24
    11ba:	71 2c       	mov	r7, r1
    11bc:	24 cb       	rjmp	.-2488   	; 0x806 <main+0x2d6>
}


    

    if (zdown == 1)
    11be:	cf 54       	subi	r28, 0x4F	; 79
    11c0:	de 4f       	sbci	r29, 0xFE	; 254
    11c2:	88 81       	ld	r24, Y
    11c4:	99 81       	ldd	r25, Y+1	; 0x01
    11c6:	c1 5b       	subi	r28, 0xB1	; 177
    11c8:	d1 40       	sbci	r29, 0x01	; 1
    11ca:	01 97       	sbiw	r24, 0x01	; 1
    11cc:	09 f0       	breq	.+2      	; 0x11d0 <main+0xca0>
    11ce:	dd ca       	rjmp	.-2630   	; 0x78a <main+0x25a>
   {
   waitdown++;
    11d0:	c3 55       	subi	r28, 0x53	; 83
    11d2:	de 4f       	sbci	r29, 0xFE	; 254
    11d4:	e8 81       	ld	r30, Y
    11d6:	f9 81       	ldd	r31, Y+1	; 0x01
    11d8:	cd 5a       	subi	r28, 0xAD	; 173
    11da:	d1 40       	sbci	r29, 0x01	; 1
    11dc:	31 96       	adiw	r30, 0x01	; 1
    11de:	c3 55       	subi	r28, 0x53	; 83
    11e0:	de 4f       	sbci	r29, 0xFE	; 254
    11e2:	f9 83       	std	Y+1, r31	; 0x01
    11e4:	e8 83       	st	Y, r30
    11e6:	cd 5a       	subi	r28, 0xAD	; 173
    11e8:	d1 40       	sbci	r29, 0x01	; 1
if (waitdown == 250)
    11ea:	ea 3f       	cpi	r30, 0xFA	; 250
    11ec:	f1 05       	cpc	r31, r1
    11ee:	09 f0       	breq	.+2      	; 0x11f2 <main+0xcc2>
    11f0:	cc ca       	rjmp	.-2664   	; 0x78a <main+0x25a>
    11f2:	22 e0       	ldi	r18, 0x02	; 2
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	cf 54       	subi	r28, 0x4F	; 79
    11f8:	de 4f       	sbci	r29, 0xFE	; 254
    11fa:	39 83       	std	Y+1, r19	; 0x01
    11fc:	28 83       	st	Y, r18
    11fe:	c1 5b       	subi	r28, 0xB1	; 177
    1200:	d1 40       	sbci	r29, 0x01	; 1
    1202:	c3 55       	subi	r28, 0x53	; 83
    1204:	de 4f       	sbci	r29, 0xFE	; 254
    1206:	19 82       	std	Y+1, r1	; 0x01
    1208:	18 82       	st	Y, r1
    120a:	cd 5a       	subi	r28, 0xAD	; 173
    120c:	d1 40       	sbci	r29, 0x01	; 1
    120e:	bd ca       	rjmp	.-2694   	; 0x78a <main+0x25a>
    
    

if (zup == 1)
{
waitup++;
    1210:	c1 55       	subi	r28, 0x51	; 81
    1212:	de 4f       	sbci	r29, 0xFE	; 254
    1214:	88 81       	ld	r24, Y
    1216:	99 81       	ldd	r25, Y+1	; 0x01
    1218:	cf 5a       	subi	r28, 0xAF	; 175
    121a:	d1 40       	sbci	r29, 0x01	; 1
    121c:	01 96       	adiw	r24, 0x01	; 1
    121e:	c1 55       	subi	r28, 0x51	; 81
    1220:	de 4f       	sbci	r29, 0xFE	; 254
    1222:	99 83       	std	Y+1, r25	; 0x01
    1224:	88 83       	st	Y, r24
    1226:	cf 5a       	subi	r28, 0xAF	; 175
    1228:	d1 40       	sbci	r29, 0x01	; 1
if (waitup == 250)
    122a:	8a 3f       	cpi	r24, 0xFA	; 250
    122c:	91 05       	cpc	r25, r1
    122e:	09 f0       	breq	.+2      	; 0x1232 <main+0xd02>
    1230:	97 ca       	rjmp	.-2770   	; 0x760 <main+0x230>
if (waiter3 == length + 6)   //next level
{
waiter3 = 0;
speed -= 25;
length -= 10;
bulletcount ++;
    1232:	82 e0       	ldi	r24, 0x02	; 2
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	cd 54       	subi	r28, 0x4D	; 77
    1238:	de 4f       	sbci	r29, 0xFE	; 254
    123a:	99 83       	std	Y+1, r25	; 0x01
    123c:	88 83       	st	Y, r24
    123e:	c3 5b       	subi	r28, 0xB3	; 179
    1240:	d1 40       	sbci	r29, 0x01	; 1
    1242:	c1 55       	subi	r28, 0x51	; 81
    1244:	de 4f       	sbci	r29, 0xFE	; 254
    1246:	19 82       	std	Y+1, r1	; 0x01
    1248:	18 82       	st	Y, r1
    124a:	cf 5a       	subi	r28, 0xAF	; 175
    124c:	d1 40       	sbci	r29, 0x01	; 1
    124e:	88 ca       	rjmp	.-2800   	; 0x760 <main+0x230>
     }
     
else
{

if (buttons & 2)
    1250:	81 ff       	sbrs	r24, 1
    1252:	07 c0       	rjmp	.+14     	; 0x1262 <main+0xd32>
{
buttons |= 32;// set bit 6
    1254:	80 62       	ori	r24, 0x20	; 32
    1256:	cf 54       	subi	r28, 0x4F	; 79
    1258:	de 4f       	sbci	r29, 0xFE	; 254
    125a:	19 82       	std	Y+1, r1	; 0x01
    125c:	18 82       	st	Y, r1
    125e:	c1 5b       	subi	r28, 0xB1	; 177
    1260:	d1 40       	sbci	r29, 0x01	; 1
 zdown = 0;
    }
buttons &= ~(2);// clear bit 2
    1262:	8d 7f       	andi	r24, 0xFD	; 253
    1264:	7b cb       	rjmp	.-2314   	; 0x95c <main+0x42c>
if ((PINC & 1) == 0) // se, switch 3
     buttons |= 4;// set bit 3
else
{

if (buttons & 4)
    1266:	82 fd       	sbrc	r24, 2
    buttons |= 64;// set bit 7
    1268:	80 64       	ori	r24, 0x40	; 64
buttons &= ~(4);// clear bit 3
    126a:	8b 7f       	andi	r24, 0xFB	; 251
    126c:	7a cb       	rjmp	.-2316   	; 0x962 <main+0x432>
if ((PIND & 128) == 0) // ne, switch 4
     buttons |= 8;// set bit 4
else
{

if (buttons & 8)
    126e:	83 fd       	sbrc	r24, 3
    buttons |= 128;// set bit 8
    1270:	80 68       	ori	r24, 0x80	; 128
buttons &= ~(8);// clear bit 4
    1272:	67 ef       	ldi	r22, 0xF7	; 247
    1274:	86 2e       	mov	r8, r22
    1276:	6f ef       	ldi	r22, 0xFF	; 255
    1278:	96 2e       	mov	r9, r22
    127a:	88 22       	and	r8, r24
    127c:	99 22       	and	r9, r25
    127e:	78 cb       	rjmp	.-2320   	; 0x970 <main+0x440>
    zup = 1;
    }
else
{

if (buttons & 1)
    1280:	80 fe       	sbrs	r8, 0
    1282:	0a c0       	rjmp	.+20     	; 0x1298 <main+0xd68>
{
zup = 0;
buttons |= 16;// set bit 5
    1284:	80 e1       	ldi	r24, 0x10	; 16
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	88 2a       	or	r8, r24
    128a:	99 2a       	or	r9, r25
    128c:	cd 54       	subi	r28, 0x4D	; 77
    128e:	de 4f       	sbci	r29, 0xFE	; 254
    1290:	19 82       	std	Y+1, r1	; 0x01
    1292:	18 82       	st	Y, r1
    1294:	c3 5b       	subi	r28, 0xB3	; 179
    1296:	d1 40       	sbci	r29, 0x01	; 1
}
buttons &= ~(1);// clear bit 1
    1298:	c4 01       	movw	r24, r8
    129a:	8e 7f       	andi	r24, 0xFE	; 254
    129c:	53 cb       	rjmp	.-2394   	; 0x944 <main+0x414>

if (stop == 0)    
    {j = 0;
    while (j < db)
    {
        display();
    129e:	0c d7       	rcall	.+3608   	; 0x20b8 <__data_load_end+0x80c>
    j++;
    }
    
grnMatrix[yc] = 16;
    12a0:	f7 01       	movw	r30, r14
    12a2:	ec 5f       	subi	r30, 0xFC	; 252
    12a4:	fe 4f       	sbci	r31, 0xFE	; 254
    12a6:	80 e1       	ldi	r24, 0x10	; 16
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	91 83       	std	Z+1, r25	; 0x01
    12ac:	80 83       	st	Z, r24
    redMatrix[yc] = 16;
    12ae:	f7 01       	movw	r30, r14
    12b0:	e2 5f       	subi	r30, 0xF2	; 242
    12b2:	fe 4f       	sbci	r31, 0xFE	; 254
    12b4:	91 83       	std	Z+1, r25	; 0x01
    12b6:	80 83       	st	Z, r24
    12b8:	fe 01       	movw	r30, r28
    12ba:	31 96       	adiw	r30, 0x01	; 1
    12bc:	0b c0       	rjmp	.+22     	; 0x12d4 <main+0xda4>
    if (bga[j].ypos == yc)
    {
    if (bga[j].xpos == 2)
    {
    bga[j].color = 0;
    stop++;
    12be:	36 96       	adiw	r30, 0x06	; 6
grnMatrix[yc] = 16;
    redMatrix[yc] = 16;
    
    
    j = 0;
while (j < NumBadGuys)
    12c0:	cb 53       	subi	r28, 0x3B	; 59
    12c2:	de 4f       	sbci	r29, 0xFE	; 254
    12c4:	88 81       	ld	r24, Y
    12c6:	99 81       	ldd	r25, Y+1	; 0x01
    12c8:	c5 5c       	subi	r28, 0xC5	; 197
    12ca:	d1 40       	sbci	r29, 0x01	; 1
    12cc:	8e 17       	cp	r24, r30
    12ce:	9f 07       	cpc	r25, r31
    12d0:	09 f4       	brne	.+2      	; 0x12d4 <main+0xda4>
    12d2:	9b cc       	rjmp	.-1738   	; 0xc0a <main+0x6da>
{
   
    
if (bga[j].color ==1)
    12d4:	84 81       	ldd	r24, Z+4	; 0x04
    12d6:	95 81       	ldd	r25, Z+5	; 0x05
    12d8:	01 97       	sbiw	r24, 0x01	; 1
    12da:	89 f7       	brne	.-30     	; 0x12be <main+0xd8e>
    {
    if (bga[j].ypos == yc)
    12dc:	82 81       	ldd	r24, Z+2	; 0x02
    12de:	93 81       	ldd	r25, Z+3	; 0x03
    12e0:	86 15       	cp	r24, r6
    12e2:	97 05       	cpc	r25, r7
    12e4:	61 f7       	brne	.-40     	; 0x12be <main+0xd8e>
    {
    if (bga[j].xpos == 2)
    12e6:	80 81       	ld	r24, Z
    12e8:	91 81       	ldd	r25, Z+1	; 0x01
    12ea:	02 97       	sbiw	r24, 0x02	; 2
    12ec:	41 f7       	brne	.-48     	; 0x12be <main+0xd8e>
    {
    bga[j].color = 0;
    12ee:	15 82       	std	Z+5, r1	; 0x05
    12f0:	14 82       	std	Z+4, r1	; 0x04
    stop++;
    12f2:	0f 5f       	subi	r16, 0xFF	; 255
    12f4:	1f 4f       	sbci	r17, 0xFF	; 255
    12f6:	e3 cf       	rjmp	.-58     	; 0x12be <main+0xd8e>

if (stop == 0)    
    {  j = 0;
    while (j < db)
    {
        display();
    12f8:	df d6       	rcall	.+3518   	; 0x20b8 <__data_load_end+0x80c>
    j++;
    }

grnMatrix[yc] = 8;
    12fa:	f7 01       	movw	r30, r14
    12fc:	ec 5f       	subi	r30, 0xFC	; 252
    12fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1300:	88 e0       	ldi	r24, 0x08	; 8
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	80 83       	st	Z, r24
  redMatrix[yc] = 8;
    1308:	f7 01       	movw	r30, r14
    130a:	e2 5f       	subi	r30, 0xF2	; 242
    130c:	fe 4f       	sbci	r31, 0xFE	; 254
    130e:	91 83       	std	Z+1, r25	; 0x01
    1310:	80 83       	st	Z, r24
    1312:	fe 01       	movw	r30, r28
    1314:	31 96       	adiw	r30, 0x01	; 1
    1316:	0a c0       	rjmp	.+20     	; 0x132c <main+0xdfc>
if (bga[j].ypos == yc)
    {
    if (bga[j].xpos == 3)
    {
        bga[j].color = 0;
    stop++;
    1318:	36 96       	adiw	r30, 0x06	; 6
grnMatrix[yc] = 8;
  redMatrix[yc] = 8;
  
  
    j = 0;
while (j < NumBadGuys)
    131a:	cb 53       	subi	r28, 0x3B	; 59
    131c:	de 4f       	sbci	r29, 0xFE	; 254
    131e:	28 81       	ld	r18, Y
    1320:	39 81       	ldd	r19, Y+1	; 0x01
    1322:	c5 5c       	subi	r28, 0xC5	; 197
    1324:	d1 40       	sbci	r29, 0x01	; 1
    1326:	2e 17       	cp	r18, r30
    1328:	3f 07       	cpc	r19, r31
    132a:	91 f0       	breq	.+36     	; 0x1350 <main+0xe20>
{
    
    
    if (bga[j].color ==1)
    132c:	84 81       	ldd	r24, Z+4	; 0x04
    132e:	95 81       	ldd	r25, Z+5	; 0x05
    1330:	01 97       	sbiw	r24, 0x01	; 1
    1332:	91 f7       	brne	.-28     	; 0x1318 <main+0xde8>
    {
if (bga[j].ypos == yc)
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	93 81       	ldd	r25, Z+3	; 0x03
    1338:	86 15       	cp	r24, r6
    133a:	97 05       	cpc	r25, r7
    133c:	69 f7       	brne	.-38     	; 0x1318 <main+0xde8>
    {
    if (bga[j].xpos == 3)
    133e:	80 81       	ld	r24, Z
    1340:	91 81       	ldd	r25, Z+1	; 0x01
    1342:	03 97       	sbiw	r24, 0x03	; 3
    1344:	49 f7       	brne	.-46     	; 0x1318 <main+0xde8>
    {
        bga[j].color = 0;
    1346:	15 82       	std	Z+5, r1	; 0x05
    1348:	14 82       	std	Z+4, r1	; 0x04
    stop++;
    134a:	0f 5f       	subi	r16, 0xFF	; 255
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	e4 cf       	rjmp	.-56     	; 0x1318 <main+0xde8>
    }
    j++;
}
}

if (stop == 0)    
    1350:	01 15       	cp	r16, r1
    1352:	11 05       	cpc	r17, r1
    1354:	09 f0       	breq	.+2      	; 0x1358 <main+0xe28>
    1356:	5d cc       	rjmp	.-1862   	; 0xc12 <main+0x6e2>
    {j = 0;
    while (j < db)
    {
        display();
    1358:	af d6       	rcall	.+3422   	; 0x20b8 <__data_load_end+0x80c>
    j++;
    }
    
grnMatrix[yc] = 4;
    135a:	f7 01       	movw	r30, r14
    135c:	ec 5f       	subi	r30, 0xFC	; 252
    135e:	fe 4f       	sbci	r31, 0xFE	; 254
    1360:	84 e0       	ldi	r24, 0x04	; 4
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	91 83       	std	Z+1, r25	; 0x01
    1366:	80 83       	st	Z, r24
    redMatrix[yc] = 4;
    1368:	f7 01       	movw	r30, r14
    136a:	e2 5f       	subi	r30, 0xF2	; 242
    136c:	fe 4f       	sbci	r31, 0xFE	; 254
    136e:	91 83       	std	Z+1, r25	; 0x01
    1370:	80 83       	st	Z, r24
    1372:	fe 01       	movw	r30, r28
    1374:	31 96       	adiw	r30, 0x01	; 1
    1376:	0a c0       	rjmp	.+20     	; 0x138c <main+0xe5c>
if (bga[j].ypos == yc)
    {
    if (bga[j].xpos == 4)
    {
    bga[j].color = 0;
    stop++;
    1378:	36 96       	adiw	r30, 0x06	; 6
grnMatrix[yc] = 4;
    redMatrix[yc] = 4;
    
    
    j = 0;
while (j < NumBadGuys)
    137a:	cb 53       	subi	r28, 0x3B	; 59
    137c:	de 4f       	sbci	r29, 0xFE	; 254
    137e:	88 81       	ld	r24, Y
    1380:	99 81       	ldd	r25, Y+1	; 0x01
    1382:	c5 5c       	subi	r28, 0xC5	; 197
    1384:	d1 40       	sbci	r29, 0x01	; 1
    1386:	8e 17       	cp	r24, r30
    1388:	9f 07       	cpc	r25, r31
    138a:	91 f0       	breq	.+36     	; 0x13b0 <main+0xe80>
{
   
    
    if (bga[j].color ==1)
    138c:	84 81       	ldd	r24, Z+4	; 0x04
    138e:	95 81       	ldd	r25, Z+5	; 0x05
    1390:	01 97       	sbiw	r24, 0x01	; 1
    1392:	91 f7       	brne	.-28     	; 0x1378 <main+0xe48>
    {
if (bga[j].ypos == yc)
    1394:	82 81       	ldd	r24, Z+2	; 0x02
    1396:	93 81       	ldd	r25, Z+3	; 0x03
    1398:	86 15       	cp	r24, r6
    139a:	97 05       	cpc	r25, r7
    139c:	69 f7       	brne	.-38     	; 0x1378 <main+0xe48>
    {
    if (bga[j].xpos == 4)
    139e:	80 81       	ld	r24, Z
    13a0:	91 81       	ldd	r25, Z+1	; 0x01
    13a2:	04 97       	sbiw	r24, 0x04	; 4
    13a4:	49 f7       	brne	.-46     	; 0x1378 <main+0xe48>
    {
    bga[j].color = 0;
    13a6:	15 82       	std	Z+5, r1	; 0x05
    13a8:	14 82       	std	Z+4, r1	; 0x04
    stop++;
    13aa:	0f 5f       	subi	r16, 0xFF	; 255
    13ac:	1f 4f       	sbci	r17, 0xFF	; 255
    13ae:	e4 cf       	rjmp	.-56     	; 0x1378 <main+0xe48>
    }
    j++;
}
}

if (stop == 0)    
    13b0:	01 15       	cp	r16, r1
    13b2:	11 05       	cpc	r17, r1
    13b4:	09 f0       	breq	.+2      	; 0x13b8 <main+0xe88>
    13b6:	2d cc       	rjmp	.-1958   	; 0xc12 <main+0x6e2>
    {j = 0;
    while (j < db)
    {
        display();
    13b8:	7f d6       	rcall	.+3326   	; 0x20b8 <__data_load_end+0x80c>
    j++;
    }
	
grnMatrix[yc] = 2;
    13ba:	f7 01       	movw	r30, r14
    13bc:	ec 5f       	subi	r30, 0xFC	; 252
    13be:	fe 4f       	sbci	r31, 0xFE	; 254
    13c0:	22 e0       	ldi	r18, 0x02	; 2
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	31 83       	std	Z+1, r19	; 0x01
    13c6:	20 83       	st	Z, r18
        redMatrix[yc] = 2;
    13c8:	f7 01       	movw	r30, r14
    13ca:	e2 5f       	subi	r30, 0xF2	; 242
    13cc:	fe 4f       	sbci	r31, 0xFE	; 254
    13ce:	31 83       	std	Z+1, r19	; 0x01
    13d0:	20 83       	st	Z, r18
    13d2:	fe 01       	movw	r30, r28
    13d4:	31 96       	adiw	r30, 0x01	; 1
    13d6:	0a c0       	rjmp	.+20     	; 0x13ec <main+0xebc>
if (bga[j].ypos == yc)
    {
    if (bga[j].xpos == 5)
    {
    bga[j].color = 0;
    stop++;
    13d8:	36 96       	adiw	r30, 0x06	; 6
grnMatrix[yc] = 2;
        redMatrix[yc] = 2;

	
    j = 0;
while (j < NumBadGuys)
    13da:	cb 53       	subi	r28, 0x3B	; 59
    13dc:	de 4f       	sbci	r29, 0xFE	; 254
    13de:	88 81       	ld	r24, Y
    13e0:	99 81       	ldd	r25, Y+1	; 0x01
    13e2:	c5 5c       	subi	r28, 0xC5	; 197
    13e4:	d1 40       	sbci	r29, 0x01	; 1
    13e6:	8e 17       	cp	r24, r30
    13e8:	9f 07       	cpc	r25, r31
    13ea:	91 f0       	breq	.+36     	; 0x1410 <main+0xee0>
{
    
    
    if (bga[j].color == 1)
    13ec:	84 81       	ldd	r24, Z+4	; 0x04
    13ee:	95 81       	ldd	r25, Z+5	; 0x05
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	91 f7       	brne	.-28     	; 0x13d8 <main+0xea8>
    {
if (bga[j].ypos == yc)
    13f4:	82 81       	ldd	r24, Z+2	; 0x02
    13f6:	93 81       	ldd	r25, Z+3	; 0x03
    13f8:	86 15       	cp	r24, r6
    13fa:	97 05       	cpc	r25, r7
    13fc:	69 f7       	brne	.-38     	; 0x13d8 <main+0xea8>
    {
    if (bga[j].xpos == 5)
    13fe:	80 81       	ld	r24, Z
    1400:	91 81       	ldd	r25, Z+1	; 0x01
    1402:	05 97       	sbiw	r24, 0x05	; 5
    1404:	49 f7       	brne	.-46     	; 0x13d8 <main+0xea8>
    {
    bga[j].color = 0;
    1406:	15 82       	std	Z+5, r1	; 0x05
    1408:	14 82       	std	Z+4, r1	; 0x04
    stop++;
    140a:	0f 5f       	subi	r16, 0xFF	; 255
    140c:	1f 4f       	sbci	r17, 0xFF	; 255
    140e:	e4 cf       	rjmp	.-56     	; 0x13d8 <main+0xea8>
    j++;
}
    }
    

if (stop == 0)    
    1410:	01 15       	cp	r16, r1
    1412:	11 05       	cpc	r17, r1
    1414:	09 f0       	breq	.+2      	; 0x1418 <main+0xee8>
    1416:	fd cb       	rjmp	.-2054   	; 0xc12 <main+0x6e2>
    { j = 0;
    while (j < db)
    {
        display();
    1418:	4f d6       	rcall	.+3230   	; 0x20b8 <__data_load_end+0x80c>
    j++;
    }
grnMatrix[yc] = 1;
    141a:	f7 01       	movw	r30, r14
    141c:	ec 5f       	subi	r30, 0xFC	; 252
    141e:	fe 4f       	sbci	r31, 0xFE	; 254
    1420:	21 e0       	ldi	r18, 0x01	; 1
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	31 83       	std	Z+1, r19	; 0x01
    1426:	20 83       	st	Z, r18
    redMatrix[yc] = 1;
    1428:	f7 01       	movw	r30, r14
    142a:	e2 5f       	subi	r30, 0xF2	; 242
    142c:	fe 4f       	sbci	r31, 0xFE	; 254
    142e:	31 83       	std	Z+1, r19	; 0x01
    1430:	20 83       	st	Z, r18
    1432:	0d c0       	rjmp	.+26     	; 0x144e <main+0xf1e>
if (bga[j].ypos == yc)
    {
    if (bga[j].xpos == 6)
    {
    bga[j].color = 0;
    stop++;
    1434:	26 e0       	ldi	r18, 0x06	; 6
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	a2 0e       	add	r10, r18
    143a:	b3 1e       	adc	r11, r19
    redMatrix[yc] = 1;
    
    
    
    j = 0;
while (j < NumBadGuys)
    143c:	cb 53       	subi	r28, 0x3B	; 59
    143e:	de 4f       	sbci	r29, 0xFE	; 254
    1440:	88 81       	ld	r24, Y
    1442:	99 81       	ldd	r25, Y+1	; 0x01
    1444:	c5 5c       	subi	r28, 0xC5	; 197
    1446:	d1 40       	sbci	r29, 0x01	; 1
    1448:	8a 15       	cp	r24, r10
    144a:	9b 05       	cpc	r25, r11
    144c:	99 f0       	breq	.+38     	; 0x1474 <main+0xf44>
{
    
    
    if (bga[j].color ==1)
    144e:	f5 01       	movw	r30, r10
    1450:	84 81       	ldd	r24, Z+4	; 0x04
    1452:	95 81       	ldd	r25, Z+5	; 0x05
    1454:	01 97       	sbiw	r24, 0x01	; 1
    1456:	71 f7       	brne	.-36     	; 0x1434 <main+0xf04>
    {
if (bga[j].ypos == yc)
    1458:	82 81       	ldd	r24, Z+2	; 0x02
    145a:	93 81       	ldd	r25, Z+3	; 0x03
    145c:	86 15       	cp	r24, r6
    145e:	97 05       	cpc	r25, r7
    1460:	49 f7       	brne	.-46     	; 0x1434 <main+0xf04>
    {
    if (bga[j].xpos == 6)
    1462:	80 81       	ld	r24, Z
    1464:	91 81       	ldd	r25, Z+1	; 0x01
    1466:	06 97       	sbiw	r24, 0x06	; 6
    1468:	29 f7       	brne	.-54     	; 0x1434 <main+0xf04>
    {
    bga[j].color = 0;
    146a:	15 82       	std	Z+5, r1	; 0x05
    146c:	14 82       	std	Z+4, r1	; 0x04
    stop++;
    146e:	0f 5f       	subi	r16, 0xFF	; 255
    1470:	1f 4f       	sbci	r17, 0xFF	; 255
    1472:	e0 cf       	rjmp	.-64     	; 0x1434 <main+0xf04>

}
}


if (stop == 0)
    1474:	01 2b       	or	r16, r17
    1476:	09 f0       	breq	.+2      	; 0x147a <main+0xf4a>
    1478:	cc cb       	rjmp	.-2152   	; 0xc12 <main+0x6e2>
  {j = 0;
    while (j < db)
    {
        display();
    147a:	1e d6       	rcall	.+3132   	; 0x20b8 <__data_load_end+0x80c>
    j++;
    }
    grnMatrix[yc] = 0;
    147c:	f7 01       	movw	r30, r14
    147e:	ec 5f       	subi	r30, 0xFC	; 252
    1480:	fe 4f       	sbci	r31, 0xFE	; 254
    1482:	11 82       	std	Z+1, r1	; 0x01
    1484:	10 82       	st	Z, r1
      redMatrix[yc] = 0;
    1486:	ee e0       	ldi	r30, 0x0E	; 14
    1488:	f1 e0       	ldi	r31, 0x01	; 1
    148a:	ee 0e       	add	r14, r30
    148c:	ff 1e       	adc	r15, r31
    148e:	f7 01       	movw	r30, r14
    1490:	11 82       	std	Z+1, r1	; 0x01
    1492:	10 82       	st	Z, r1
    1494:	be cb       	rjmp	.-2180   	; 0xc12 <main+0x6e2>
{
ICR1 = 14440;	
OCR1A = 7220;
}   
    
   if (firenote == 10) // d
    1496:	8a 30       	cpi	r24, 0x0A	; 10
    1498:	91 05       	cpc	r25, r1
    149a:	39 f5       	brne	.+78     	; 0x14ea <main+0xfba>
{
ICR1 = 13638;	
    149c:	26 e4       	ldi	r18, 0x46	; 70
    149e:	35 e3       	ldi	r19, 0x35	; 53
    14a0:	30 93 87 00 	sts	0x0087, r19
    14a4:	20 93 86 00 	sts	0x0086, r18
OCR1A = 6814;
    14a8:	2e e9       	ldi	r18, 0x9E	; 158
    14aa:	3a e1       	ldi	r19, 0x1A	; 26
    14ac:	30 93 89 00 	sts	0x0089, r19
    14b0:	20 93 88 00 	sts	0x0088, r18
ICR1 = 11461;	
OCR1A = 5730;
}


   if (firenote == 6) // f# / gb
    14b4:	86 30       	cpi	r24, 0x06	; 6
    14b6:	91 05       	cpc	r25, r1
    14b8:	41 f5       	brne	.+80     	; 0x150a <main+0xfda>
{
ICR1 = 10810;	
    14ba:	70 93 87 00 	sts	0x0087, r23
    14be:	60 93 86 00 	sts	0x0086, r22
OCR1A = 5405;
    14c2:	f0 93 89 00 	sts	0x0089, r31
    14c6:	e0 93 88 00 	sts	0x0088, r30
{
ICR1 = 9090;	
OCR1A = 4545;
}

   if (firenote == 2) //a# / bb
    14ca:	82 30       	cpi	r24, 0x02	; 2
    14cc:	91 05       	cpc	r25, r1
    14ce:	69 f5       	brne	.+90     	; 0x152a <main+0xffa>
{
ICR1 = 8583;	
    14d0:	27 e8       	ldi	r18, 0x87	; 135
    14d2:	31 e2       	ldi	r19, 0x21	; 33
    14d4:	30 93 87 00 	sts	0x0087, r19
    14d8:	20 93 86 00 	sts	0x0086, r18
OCR1A = 4291;
    14dc:	23 ec       	ldi	r18, 0xC3	; 195
    14de:	30 e1       	ldi	r19, 0x10	; 16
    14e0:	30 93 89 00 	sts	0x0089, r19
    14e4:	20 93 88 00 	sts	0x0088, r18
    14e8:	c9 cb       	rjmp	.-2158   	; 0xc7c <main+0x74c>
ICR1 = 13638;	
OCR1A = 6814;
}    
    
    
   if (firenote == 9) // d# / eb
    14ea:	89 30       	cpi	r24, 0x09	; 9
    14ec:	91 05       	cpc	r25, r1
    14ee:	09 f0       	breq	.+2      	; 0x14f2 <main+0xfc2>
    14f0:	19 cc       	rjmp	.-1998   	; 0xd24 <main+0x7f4>
{
ICR1 = 12861;	
    14f2:	2d e3       	ldi	r18, 0x3D	; 61
    14f4:	32 e3       	ldi	r19, 0x32	; 50
    14f6:	30 93 87 00 	sts	0x0087, r19
    14fa:	20 93 86 00 	sts	0x0086, r18
OCR1A = 6340;
    14fe:	24 ec       	ldi	r18, 0xC4	; 196
    1500:	38 e1       	ldi	r19, 0x18	; 24
    1502:	30 93 89 00 	sts	0x0089, r19
    1506:	20 93 88 00 	sts	0x0088, r18
{
ICR1 = 10810;	
OCR1A = 5405;
}

   if (firenote == 5) // g
    150a:	85 30       	cpi	r24, 0x05	; 5
    150c:	91 05       	cpc	r25, r1
    150e:	09 f0       	breq	.+2      	; 0x1512 <main+0xfe2>
    1510:	14 cc       	rjmp	.-2008   	; 0xd3a <main+0x80a>
{
ICR1 = 10204;	
    1512:	2c ed       	ldi	r18, 0xDC	; 220
    1514:	37 e2       	ldi	r19, 0x27	; 39
    1516:	30 93 87 00 	sts	0x0087, r19
    151a:	20 93 86 00 	sts	0x0086, r18
OCR1A = 5102;
    151e:	2e ee       	ldi	r18, 0xEE	; 238
    1520:	33 e1       	ldi	r19, 0x13	; 19
    1522:	30 93 89 00 	sts	0x0089, r19
    1526:	20 93 88 00 	sts	0x0088, r18
{
ICR1 = 8583;	
OCR1A = 4291;
}

   if (firenote == 1) // b
    152a:	81 30       	cpi	r24, 0x01	; 1
    152c:	91 05       	cpc	r25, r1
    152e:	09 f0       	breq	.+2      	; 0x1532 <main+0x1002>
    1530:	13 cc       	rjmp	.-2010   	; 0xd58 <main+0x828>
{
ICR1 = 8097;	
    1532:	21 ea       	ldi	r18, 0xA1	; 161
    1534:	3f e1       	ldi	r19, 0x1F	; 31
    1536:	30 93 87 00 	sts	0x0087, r19
    153a:	20 93 86 00 	sts	0x0086, r18
OCR1A = 4048;
    153e:	20 ed       	ldi	r18, 0xD0	; 208
    1540:	3f e0       	ldi	r19, 0x0F	; 15
    1542:	30 93 89 00 	sts	0x0089, r19
    1546:	20 93 88 00 	sts	0x0088, r18
    154a:	98 cb       	rjmp	.-2256   	; 0xc7c <main+0x74c>


if (buttons & 32) // down
{
if (yc < 4)
    yc++;
    154c:	08 94       	sec
    154e:	61 1c       	adc	r6, r1
    1550:	71 1c       	adc	r7, r1
    1552:	1d cb       	rjmp	.-2502   	; 0xb8e <main+0x65e>
{
ICR1 = 14440;	
OCR1A = 7220;
}   
    
   if (note == 3) // D
    1554:	c9 54       	subi	r28, 0x49	; 73
    1556:	de 4f       	sbci	r29, 0xFE	; 254
    1558:	28 81       	ld	r18, Y
    155a:	39 81       	ldd	r19, Y+1	; 0x01
    155c:	c7 5b       	subi	r28, 0xB7	; 183
    155e:	d1 40       	sbci	r29, 0x01	; 1
    1560:	23 30       	cpi	r18, 0x03	; 3
    1562:	31 05       	cpc	r19, r1
    1564:	09 f0       	breq	.+2      	; 0x1568 <main+0x1038>
    1566:	41 c0       	rjmp	.+130    	; 0x15ea <main+0x10ba>
{
ICR1 = 13638;	
    1568:	86 e4       	ldi	r24, 0x46	; 70
    156a:	95 e3       	ldi	r25, 0x35	; 53
    156c:	90 93 87 00 	sts	0x0087, r25
    1570:	80 93 86 00 	sts	0x0086, r24
OCR1A = 6814;
    1574:	8e e9       	ldi	r24, 0x9E	; 158
    1576:	9a e1       	ldi	r25, 0x1A	; 26
    1578:	90 93 89 00 	sts	0x0089, r25
    157c:	80 93 88 00 	sts	0x0088, r24
ICR1 = 11461;	
OCR1A = 5730;
}


   if (note == 7) // F# / Gb
    1580:	c9 54       	subi	r28, 0x49	; 73
    1582:	de 4f       	sbci	r29, 0xFE	; 254
    1584:	88 81       	ld	r24, Y
    1586:	99 81       	ldd	r25, Y+1	; 0x01
    1588:	c7 5b       	subi	r28, 0xB7	; 183
    158a:	d1 40       	sbci	r29, 0x01	; 1
    158c:	07 97       	sbiw	r24, 0x07	; 7
    158e:	09 f0       	breq	.+2      	; 0x1592 <main+0x1062>
    1590:	41 c0       	rjmp	.+130    	; 0x1614 <main+0x10e4>
{
ICR1 = 10810;	
    1592:	8a e3       	ldi	r24, 0x3A	; 58
    1594:	9a e2       	ldi	r25, 0x2A	; 42
    1596:	90 93 87 00 	sts	0x0087, r25
    159a:	80 93 86 00 	sts	0x0086, r24
OCR1A = 5405;
    159e:	8d e1       	ldi	r24, 0x1D	; 29
    15a0:	95 e1       	ldi	r25, 0x15	; 21
    15a2:	90 93 89 00 	sts	0x0089, r25
    15a6:	80 93 88 00 	sts	0x0088, r24
{
ICR1 = 9090;	
OCR1A = 4545;
}

   if (note == 11) //A# / Bb
    15aa:	c9 54       	subi	r28, 0x49	; 73
    15ac:	de 4f       	sbci	r29, 0xFE	; 254
    15ae:	28 81       	ld	r18, Y
    15b0:	39 81       	ldd	r19, Y+1	; 0x01
    15b2:	c7 5b       	subi	r28, 0xB7	; 183
    15b4:	d1 40       	sbci	r29, 0x01	; 1
    15b6:	2b 30       	cpi	r18, 0x0B	; 11
    15b8:	31 05       	cpc	r19, r1
    15ba:	09 f0       	breq	.+2      	; 0x15be <main+0x108e>
    15bc:	40 c0       	rjmp	.+128    	; 0x163e <main+0x110e>
{
ICR1 = 8583;	
    15be:	87 e8       	ldi	r24, 0x87	; 135
    15c0:	91 e2       	ldi	r25, 0x21	; 33
    15c2:	90 93 87 00 	sts	0x0087, r25
    15c6:	80 93 86 00 	sts	0x0086, r24
OCR1A = 4291;
    15ca:	e3 ec       	ldi	r30, 0xC3	; 195
    15cc:	f0 e1       	ldi	r31, 0x10	; 16
    15ce:	f0 93 89 00 	sts	0x0089, r31
    15d2:	e0 93 88 00 	sts	0x0088, r30
    15d6:	a9 c9       	rjmp	.-3246   	; 0x92a <main+0x3fa>
// Test buttons!

if ((PINB & 1) == 0) // nw, switch 1
    {
buttons |= 1;// set bit 1
if (zup < 2)
    15d8:	21 e0       	ldi	r18, 0x01	; 1
    15da:	30 e0       	ldi	r19, 0x00	; 0
    15dc:	cd 54       	subi	r28, 0x4D	; 77
    15de:	de 4f       	sbci	r29, 0xFE	; 254
    15e0:	39 83       	std	Y+1, r19	; 0x01
    15e2:	28 83       	st	Y, r18
    15e4:	c3 5b       	subi	r28, 0xB3	; 179
    15e6:	d1 40       	sbci	r29, 0x01	; 1
    15e8:	ad c9       	rjmp	.-3238   	; 0x944 <main+0x414>
ICR1 = 13638;	
OCR1A = 6814;
}    
    
    
   if (note == 4) // D# / Eb
    15ea:	c9 54       	subi	r28, 0x49	; 73
    15ec:	de 4f       	sbci	r29, 0xFE	; 254
    15ee:	88 81       	ld	r24, Y
    15f0:	99 81       	ldd	r25, Y+1	; 0x01
    15f2:	c7 5b       	subi	r28, 0xB7	; 183
    15f4:	d1 40       	sbci	r29, 0x01	; 1
    15f6:	04 97       	sbiw	r24, 0x04	; 4
    15f8:	09 f0       	breq	.+2      	; 0x15fc <main+0x10cc>
    15fa:	2c cd       	rjmp	.-1448   	; 0x1054 <main+0xb24>
{
ICR1 = 12861;	
    15fc:	8d e3       	ldi	r24, 0x3D	; 61
    15fe:	92 e3       	ldi	r25, 0x32	; 50
    1600:	90 93 87 00 	sts	0x0087, r25
    1604:	80 93 86 00 	sts	0x0086, r24
OCR1A = 6340;
    1608:	84 ec       	ldi	r24, 0xC4	; 196
    160a:	98 e1       	ldi	r25, 0x18	; 24
    160c:	90 93 89 00 	sts	0x0089, r25
    1610:	80 93 88 00 	sts	0x0088, r24
{
ICR1 = 10810;	
OCR1A = 5405;
}

   if (note == 8) // G
    1614:	c9 54       	subi	r28, 0x49	; 73
    1616:	de 4f       	sbci	r29, 0xFE	; 254
    1618:	e8 81       	ld	r30, Y
    161a:	f9 81       	ldd	r31, Y+1	; 0x01
    161c:	c7 5b       	subi	r28, 0xB7	; 183
    161e:	d1 40       	sbci	r29, 0x01	; 1
    1620:	38 97       	sbiw	r30, 0x08	; 8
    1622:	09 f0       	breq	.+2      	; 0x1626 <main+0x10f6>
    1624:	2c cd       	rjmp	.-1448   	; 0x107e <main+0xb4e>
{
ICR1 = 10204;	
    1626:	8c ed       	ldi	r24, 0xDC	; 220
    1628:	97 e2       	ldi	r25, 0x27	; 39
    162a:	90 93 87 00 	sts	0x0087, r25
    162e:	80 93 86 00 	sts	0x0086, r24
OCR1A = 5102;
    1632:	8e ee       	ldi	r24, 0xEE	; 238
    1634:	93 e1       	ldi	r25, 0x13	; 19
    1636:	90 93 89 00 	sts	0x0089, r25
    163a:	80 93 88 00 	sts	0x0088, r24
{
ICR1 = 8583;	
OCR1A = 4291;
}

   if (note == 12) // B
    163e:	c9 54       	subi	r28, 0x49	; 73
    1640:	de 4f       	sbci	r29, 0xFE	; 254
    1642:	28 81       	ld	r18, Y
    1644:	39 81       	ldd	r19, Y+1	; 0x01
    1646:	c7 5b       	subi	r28, 0xB7	; 183
    1648:	d1 40       	sbci	r29, 0x01	; 1
    164a:	2c 30       	cpi	r18, 0x0C	; 12
    164c:	31 05       	cpc	r19, r1
    164e:	09 f0       	breq	.+2      	; 0x1652 <main+0x1122>
    1650:	2c cd       	rjmp	.-1448   	; 0x10aa <main+0xb7a>
{
ICR1 = 8097;	
    1652:	81 ea       	ldi	r24, 0xA1	; 161
    1654:	9f e1       	ldi	r25, 0x1F	; 31
    1656:	90 93 87 00 	sts	0x0087, r25
    165a:	80 93 86 00 	sts	0x0086, r24
OCR1A = 4048;
    165e:	e0 ed       	ldi	r30, 0xD0	; 208
    1660:	ff e0       	ldi	r31, 0x0F	; 15
    1662:	f0 93 89 00 	sts	0x0089, r31
    1666:	e0 93 88 00 	sts	0x0088, r30
    166a:	5f c9       	rjmp	.-3394   	; 0x92a <main+0x3fa>
    

if ((PINB & 4) == 0) // sw, switch 2
     { 
	 buttons |= 2;// set bit 2
     if (zdown < 2)
    166c:	21 e0       	ldi	r18, 0x01	; 1
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	cf 54       	subi	r28, 0x4F	; 79
    1672:	de 4f       	sbci	r29, 0xFE	; 254
    1674:	39 83       	std	Y+1, r19	; 0x01
    1676:	28 83       	st	Y, r18
    1678:	c1 5b       	subi	r28, 0xB1	; 177
    167a:	d1 40       	sbci	r29, 0x01	; 1
    167c:	6f c9       	rjmp	.-3362   	; 0x95c <main+0x42c>

0000167e <do_rand>:
    167e:	a0 e0       	ldi	r26, 0x00	; 0
    1680:	b0 e0       	ldi	r27, 0x00	; 0
    1682:	e4 e4       	ldi	r30, 0x44	; 68
    1684:	fb e0       	ldi	r31, 0x0B	; 11
    1686:	bd c0       	rjmp	.+378    	; 0x1802 <__prologue_saves__+0x10>
    1688:	ec 01       	movw	r28, r24
    168a:	a8 80       	ld	r10, Y
    168c:	b9 80       	ldd	r11, Y+1	; 0x01
    168e:	ca 80       	ldd	r12, Y+2	; 0x02
    1690:	db 80       	ldd	r13, Y+3	; 0x03
    1692:	a1 14       	cp	r10, r1
    1694:	b1 04       	cpc	r11, r1
    1696:	c1 04       	cpc	r12, r1
    1698:	d1 04       	cpc	r13, r1
    169a:	41 f4       	brne	.+16     	; 0x16ac <do_rand+0x2e>
    169c:	84 e2       	ldi	r24, 0x24	; 36
    169e:	a8 2e       	mov	r10, r24
    16a0:	89 ed       	ldi	r24, 0xD9	; 217
    16a2:	b8 2e       	mov	r11, r24
    16a4:	8b e5       	ldi	r24, 0x5B	; 91
    16a6:	c8 2e       	mov	r12, r24
    16a8:	87 e0       	ldi	r24, 0x07	; 7
    16aa:	d8 2e       	mov	r13, r24
    16ac:	c6 01       	movw	r24, r12
    16ae:	b5 01       	movw	r22, r10
    16b0:	2d e1       	ldi	r18, 0x1D	; 29
    16b2:	33 ef       	ldi	r19, 0xF3	; 243
    16b4:	41 e0       	ldi	r20, 0x01	; 1
    16b6:	50 e0       	ldi	r21, 0x00	; 0
    16b8:	81 d0       	rcall	.+258    	; 0x17bc <__divmodsi4>
    16ba:	27 ea       	ldi	r18, 0xA7	; 167
    16bc:	31 e4       	ldi	r19, 0x41	; 65
    16be:	40 e0       	ldi	r20, 0x00	; 0
    16c0:	50 e0       	ldi	r21, 0x00	; 0
    16c2:	5d d0       	rcall	.+186    	; 0x177e <__mulsi3>
    16c4:	7b 01       	movw	r14, r22
    16c6:	8c 01       	movw	r16, r24
    16c8:	c6 01       	movw	r24, r12
    16ca:	b5 01       	movw	r22, r10
    16cc:	2d e1       	ldi	r18, 0x1D	; 29
    16ce:	33 ef       	ldi	r19, 0xF3	; 243
    16d0:	41 e0       	ldi	r20, 0x01	; 1
    16d2:	50 e0       	ldi	r21, 0x00	; 0
    16d4:	73 d0       	rcall	.+230    	; 0x17bc <__divmodsi4>
    16d6:	ca 01       	movw	r24, r20
    16d8:	b9 01       	movw	r22, r18
    16da:	2c ee       	ldi	r18, 0xEC	; 236
    16dc:	34 ef       	ldi	r19, 0xF4	; 244
    16de:	4f ef       	ldi	r20, 0xFF	; 255
    16e0:	5f ef       	ldi	r21, 0xFF	; 255
    16e2:	4d d0       	rcall	.+154    	; 0x177e <__mulsi3>
    16e4:	6e 0d       	add	r22, r14
    16e6:	7f 1d       	adc	r23, r15
    16e8:	80 1f       	adc	r24, r16
    16ea:	91 1f       	adc	r25, r17
    16ec:	97 ff       	sbrs	r25, 7
    16ee:	04 c0       	rjmp	.+8      	; 0x16f8 <do_rand+0x7a>
    16f0:	61 50       	subi	r22, 0x01	; 1
    16f2:	70 40       	sbci	r23, 0x00	; 0
    16f4:	80 40       	sbci	r24, 0x00	; 0
    16f6:	90 48       	sbci	r25, 0x80	; 128
    16f8:	68 83       	st	Y, r22
    16fa:	79 83       	std	Y+1, r23	; 0x01
    16fc:	8a 83       	std	Y+2, r24	; 0x02
    16fe:	9b 83       	std	Y+3, r25	; 0x03
    1700:	9b 01       	movw	r18, r22
    1702:	3f 77       	andi	r19, 0x7F	; 127
    1704:	c9 01       	movw	r24, r18
    1706:	cd b7       	in	r28, 0x3d	; 61
    1708:	de b7       	in	r29, 0x3e	; 62
    170a:	ea e0       	ldi	r30, 0x0A	; 10
    170c:	96 c0       	rjmp	.+300    	; 0x183a <__epilogue_restores__+0x10>

0000170e <rand_r>:
    170e:	b7 df       	rcall	.-146    	; 0x167e <do_rand>
    1710:	08 95       	ret

00001712 <rand>:
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	91 e0       	ldi	r25, 0x01	; 1
    1716:	b3 df       	rcall	.-154    	; 0x167e <do_rand>
    1718:	08 95       	ret

0000171a <srand>:
    171a:	a0 e0       	ldi	r26, 0x00	; 0
    171c:	b0 e0       	ldi	r27, 0x00	; 0
    171e:	80 93 00 01 	sts	0x0100, r24
    1722:	90 93 01 01 	sts	0x0101, r25
    1726:	a0 93 02 01 	sts	0x0102, r26
    172a:	b0 93 03 01 	sts	0x0103, r27
    172e:	08 95       	ret

00001730 <__udivmodhi4>:
    1730:	aa 1b       	sub	r26, r26
    1732:	bb 1b       	sub	r27, r27
    1734:	51 e1       	ldi	r21, 0x11	; 17
    1736:	07 c0       	rjmp	.+14     	; 0x1746 <__udivmodhi4_ep>

00001738 <__udivmodhi4_loop>:
    1738:	aa 1f       	adc	r26, r26
    173a:	bb 1f       	adc	r27, r27
    173c:	a6 17       	cp	r26, r22
    173e:	b7 07       	cpc	r27, r23
    1740:	10 f0       	brcs	.+4      	; 0x1746 <__udivmodhi4_ep>
    1742:	a6 1b       	sub	r26, r22
    1744:	b7 0b       	sbc	r27, r23

00001746 <__udivmodhi4_ep>:
    1746:	88 1f       	adc	r24, r24
    1748:	99 1f       	adc	r25, r25
    174a:	5a 95       	dec	r21
    174c:	a9 f7       	brne	.-22     	; 0x1738 <__udivmodhi4_loop>
    174e:	80 95       	com	r24
    1750:	90 95       	com	r25
    1752:	bc 01       	movw	r22, r24
    1754:	cd 01       	movw	r24, r26
    1756:	08 95       	ret

00001758 <__divmodhi4>:
    1758:	97 fb       	bst	r25, 7
    175a:	09 2e       	mov	r0, r25
    175c:	07 26       	eor	r0, r23
    175e:	0a d0       	rcall	.+20     	; 0x1774 <__divmodhi4_neg1>
    1760:	77 fd       	sbrc	r23, 7
    1762:	04 d0       	rcall	.+8      	; 0x176c <__divmodhi4_neg2>
    1764:	e5 df       	rcall	.-54     	; 0x1730 <__udivmodhi4>
    1766:	06 d0       	rcall	.+12     	; 0x1774 <__divmodhi4_neg1>
    1768:	00 20       	and	r0, r0
    176a:	1a f4       	brpl	.+6      	; 0x1772 <__divmodhi4_exit>

0000176c <__divmodhi4_neg2>:
    176c:	70 95       	com	r23
    176e:	61 95       	neg	r22
    1770:	7f 4f       	sbci	r23, 0xFF	; 255

00001772 <__divmodhi4_exit>:
    1772:	08 95       	ret

00001774 <__divmodhi4_neg1>:
    1774:	f6 f7       	brtc	.-4      	; 0x1772 <__divmodhi4_exit>
    1776:	90 95       	com	r25
    1778:	81 95       	neg	r24
    177a:	9f 4f       	sbci	r25, 0xFF	; 255
    177c:	08 95       	ret

0000177e <__mulsi3>:
    177e:	62 9f       	mul	r22, r18
    1780:	d0 01       	movw	r26, r0
    1782:	73 9f       	mul	r23, r19
    1784:	f0 01       	movw	r30, r0
    1786:	82 9f       	mul	r24, r18
    1788:	e0 0d       	add	r30, r0
    178a:	f1 1d       	adc	r31, r1
    178c:	64 9f       	mul	r22, r20
    178e:	e0 0d       	add	r30, r0
    1790:	f1 1d       	adc	r31, r1
    1792:	92 9f       	mul	r25, r18
    1794:	f0 0d       	add	r31, r0
    1796:	83 9f       	mul	r24, r19
    1798:	f0 0d       	add	r31, r0
    179a:	74 9f       	mul	r23, r20
    179c:	f0 0d       	add	r31, r0
    179e:	65 9f       	mul	r22, r21
    17a0:	f0 0d       	add	r31, r0
    17a2:	99 27       	eor	r25, r25
    17a4:	72 9f       	mul	r23, r18
    17a6:	b0 0d       	add	r27, r0
    17a8:	e1 1d       	adc	r30, r1
    17aa:	f9 1f       	adc	r31, r25
    17ac:	63 9f       	mul	r22, r19
    17ae:	b0 0d       	add	r27, r0
    17b0:	e1 1d       	adc	r30, r1
    17b2:	f9 1f       	adc	r31, r25
    17b4:	bd 01       	movw	r22, r26
    17b6:	cf 01       	movw	r24, r30
    17b8:	11 24       	eor	r1, r1
    17ba:	08 95       	ret

000017bc <__divmodsi4>:
    17bc:	97 fb       	bst	r25, 7
    17be:	09 2e       	mov	r0, r25
    17c0:	05 26       	eor	r0, r21
    17c2:	0e d0       	rcall	.+28     	; 0x17e0 <__divmodsi4_neg1>
    17c4:	57 fd       	sbrc	r21, 7
    17c6:	04 d0       	rcall	.+8      	; 0x17d0 <__divmodsi4_neg2>
    17c8:	4b d0       	rcall	.+150    	; 0x1860 <__udivmodsi4>
    17ca:	0a d0       	rcall	.+20     	; 0x17e0 <__divmodsi4_neg1>
    17cc:	00 1c       	adc	r0, r0
    17ce:	38 f4       	brcc	.+14     	; 0x17de <__divmodsi4_exit>

000017d0 <__divmodsi4_neg2>:
    17d0:	50 95       	com	r21
    17d2:	40 95       	com	r20
    17d4:	30 95       	com	r19
    17d6:	21 95       	neg	r18
    17d8:	3f 4f       	sbci	r19, 0xFF	; 255
    17da:	4f 4f       	sbci	r20, 0xFF	; 255
    17dc:	5f 4f       	sbci	r21, 0xFF	; 255

000017de <__divmodsi4_exit>:
    17de:	08 95       	ret

000017e0 <__divmodsi4_neg1>:
    17e0:	f6 f7       	brtc	.-4      	; 0x17de <__divmodsi4_exit>
    17e2:	90 95       	com	r25
    17e4:	80 95       	com	r24
    17e6:	70 95       	com	r23
    17e8:	61 95       	neg	r22
    17ea:	7f 4f       	sbci	r23, 0xFF	; 255
    17ec:	8f 4f       	sbci	r24, 0xFF	; 255
    17ee:	9f 4f       	sbci	r25, 0xFF	; 255
    17f0:	08 95       	ret

000017f2 <__prologue_saves__>:
    17f2:	2f 92       	push	r2
    17f4:	3f 92       	push	r3
    17f6:	4f 92       	push	r4
    17f8:	5f 92       	push	r5
    17fa:	6f 92       	push	r6
    17fc:	7f 92       	push	r7
    17fe:	8f 92       	push	r8
    1800:	9f 92       	push	r9
    1802:	af 92       	push	r10
    1804:	bf 92       	push	r11
    1806:	cf 92       	push	r12
    1808:	df 92       	push	r13
    180a:	ef 92       	push	r14
    180c:	ff 92       	push	r15
    180e:	0f 93       	push	r16
    1810:	1f 93       	push	r17
    1812:	cf 93       	push	r28
    1814:	df 93       	push	r29
    1816:	cd b7       	in	r28, 0x3d	; 61
    1818:	de b7       	in	r29, 0x3e	; 62
    181a:	ca 1b       	sub	r28, r26
    181c:	db 0b       	sbc	r29, r27
    181e:	0f b6       	in	r0, 0x3f	; 63
    1820:	f8 94       	cli
    1822:	de bf       	out	0x3e, r29	; 62
    1824:	0f be       	out	0x3f, r0	; 63
    1826:	cd bf       	out	0x3d, r28	; 61
    1828:	09 94       	ijmp

0000182a <__epilogue_restores__>:
    182a:	2a 88       	ldd	r2, Y+18	; 0x12
    182c:	39 88       	ldd	r3, Y+17	; 0x11
    182e:	48 88       	ldd	r4, Y+16	; 0x10
    1830:	5f 84       	ldd	r5, Y+15	; 0x0f
    1832:	6e 84       	ldd	r6, Y+14	; 0x0e
    1834:	7d 84       	ldd	r7, Y+13	; 0x0d
    1836:	8c 84       	ldd	r8, Y+12	; 0x0c
    1838:	9b 84       	ldd	r9, Y+11	; 0x0b
    183a:	aa 84       	ldd	r10, Y+10	; 0x0a
    183c:	b9 84       	ldd	r11, Y+9	; 0x09
    183e:	c8 84       	ldd	r12, Y+8	; 0x08
    1840:	df 80       	ldd	r13, Y+7	; 0x07
    1842:	ee 80       	ldd	r14, Y+6	; 0x06
    1844:	fd 80       	ldd	r15, Y+5	; 0x05
    1846:	0c 81       	ldd	r16, Y+4	; 0x04
    1848:	1b 81       	ldd	r17, Y+3	; 0x03
    184a:	aa 81       	ldd	r26, Y+2	; 0x02
    184c:	b9 81       	ldd	r27, Y+1	; 0x01
    184e:	ce 0f       	add	r28, r30
    1850:	d1 1d       	adc	r29, r1
    1852:	0f b6       	in	r0, 0x3f	; 63
    1854:	f8 94       	cli
    1856:	de bf       	out	0x3e, r29	; 62
    1858:	0f be       	out	0x3f, r0	; 63
    185a:	cd bf       	out	0x3d, r28	; 61
    185c:	ed 01       	movw	r28, r26
    185e:	08 95       	ret

00001860 <__udivmodsi4>:
    1860:	a1 e2       	ldi	r26, 0x21	; 33
    1862:	1a 2e       	mov	r1, r26
    1864:	aa 1b       	sub	r26, r26
    1866:	bb 1b       	sub	r27, r27
    1868:	fd 01       	movw	r30, r26
    186a:	0d c0       	rjmp	.+26     	; 0x1886 <__udivmodsi4_ep>

0000186c <__udivmodsi4_loop>:
    186c:	aa 1f       	adc	r26, r26
    186e:	bb 1f       	adc	r27, r27
    1870:	ee 1f       	adc	r30, r30
    1872:	ff 1f       	adc	r31, r31
    1874:	a2 17       	cp	r26, r18
    1876:	b3 07       	cpc	r27, r19
    1878:	e4 07       	cpc	r30, r20
    187a:	f5 07       	cpc	r31, r21
    187c:	20 f0       	brcs	.+8      	; 0x1886 <__udivmodsi4_ep>
    187e:	a2 1b       	sub	r26, r18
    1880:	b3 0b       	sbc	r27, r19
    1882:	e4 0b       	sbc	r30, r20
    1884:	f5 0b       	sbc	r31, r21

00001886 <__udivmodsi4_ep>:
    1886:	66 1f       	adc	r22, r22
    1888:	77 1f       	adc	r23, r23
    188a:	88 1f       	adc	r24, r24
    188c:	99 1f       	adc	r25, r25
    188e:	1a 94       	dec	r1
    1890:	69 f7       	brne	.-38     	; 0x186c <__udivmodsi4_loop>
    1892:	60 95       	com	r22
    1894:	70 95       	com	r23
    1896:	80 95       	com	r24
    1898:	90 95       	com	r25
    189a:	9b 01       	movw	r18, r22
    189c:	ac 01       	movw	r20, r24
    189e:	bd 01       	movw	r22, r26
    18a0:	cf 01       	movw	r24, r30
    18a2:	08 95       	ret

000018a4 <_exit>:
    18a4:	f8 94       	cli

000018a6 <__stop_program>:
    18a6:	ff cf       	rjmp	.-2      	; 0x18a6 <__stop_program>
